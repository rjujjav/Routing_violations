
                           Design Compiler Graphical 
                                 DC Ultra (TM)
                                  DFTMAX (TM)
                              Power Compiler (TM)
                                 DesignWare (R)
                                 DC Expert (TM)
                               Design Vision (TM)
                               HDL Compiler (TM)
                               VHDL Compiler (TM)
                                  DFT Compiler
                               Design Compiler(R)

               Version S-2021.06-SP3 for linux64 - Oct 14, 2021 

                    Copyright (c) 1988 - 2021 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
   or distribution of this software is strictly prohibited.  Licensed Products
     communicate with Synopsys servers for the purpose of providing software
    updates, detecting software piracy and verifying that customers are using
    Licensed Products in conformity with the applicable License Key for such
  Licensed Products. Synopsys will use information gathered in connection with
    this process to deliver software updates and pursue software pirates and
                                   infringers.

 Inclusivity & Diversity - Visit SolvNetPlus to read the "Synopsys Statement on
            Inclusivity and Diversity" (Refer to article 000036315 at
                        https://solvnetplus.synopsys.com)
Initializing...
Starting shell in Topographical mode...
source -echo -verbose ./rm_setup/dc_setup.tcl
source -echo -verbose ./rm_setup/common_setup.tcl
puts "RM-Info: Running script [info script]\n"
RM-Info: Running script /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_setup/common_setup.tcl

set TECH_HOME "/mnt/coe/workspace/ece/ece720-common/tech"
/mnt/coe/workspace/ece/ece720-common/tech
##########################################################################################
# Variables common to all reference methodology scripts
# Script: common_setup.tcl
# Version: P-2019.03-SP2 
# Copyright (C) 2007-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
set DESIGN_NAME                   "counter"  ;#  The name of the top-level design
counter
set DESIGN_REF_DATA_PATH          "../src/rtl/counter"  ;#  Absolute path prefix variable for library/design data.
../src/rtl/counter
#  Use this variable to prefix the common absolute path  
#  to the common variables defined below.
#  Absolute paths are mandatory for hierarchical 
#  reference methodology flow.
##########################################################################################
# Hierarchical Flow Design Variables
##########################################################################################
set HIERARCHICAL_DESIGNS           "" ;# List of hierarchical block design names "DesignA DesignB" ...
set HIERARCHICAL_CELLS             "" ;# List of hierarchical block cell instance names "u_DesignA u_DesignB" ...
##########################################################################################
# Library Setup Variables
##########################################################################################
# For the following variables, use a blank space to separate multiple entries.
# Example: set TARGET_LIBRARY_FILES "lib1.db lib2.db lib3.db"
set ADDITIONAL_SEARCH_PATH        "../src/rtl/counter"  ;#  Additional search path to be added to the default search path
../src/rtl/counter
set TARGET_LIBRARY_FILES          ""  ;#  Target technology logical libraries
append TARGET_LIBRARY_FILES "   ${TECH_HOME}/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db   ${TECH_HOME}/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db "
   /mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db   /mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db 
set ADDITIONAL_LINK_LIB_FILES     ""  ;#  Extra link logical libraries not included in TARGET_LIBRARY_FILES
set MIN_LIBRARY_FILES             ""  ;#  List of max min library pairs "max1 min1 max2 min2 max3 min3"...
set MW_REFERENCE_LIB_DIRS         "${TECH_HOME}/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs"  ;#  Milkyway reference libraries (include IC Compiler ILMs here)
/mnt/coe/workspace/ece/ece720-common/tech/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs
set MW_REFERENCE_CONTROL_FILE     ""  ;#  Reference Control file to define the Milkyway reference libs
set TECH_FILE                     "${TECH_HOME}/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs.tf"  ;#  Milkyway technology file
/mnt/coe/workspace/ece/ece720-common/tech/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs.tf
set MAP_FILE                      "${TECH_HOME}/google/star_rcxt/sky130/layer.map"  ;#  Mapping file for TLUplus
/mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/layer.map
set TLUPLUS_MAX_FILE              "${TECH_HOME}/google/star_rcxt/sky130/sky130_RCmax.tluplus"  ;#  Max TLUplus file
/mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmax.tluplus
set TLUPLUS_MIN_FILE              "${TECH_HOME}/google/star_rcxt/sky130/sky130_RCmin.tluplus"  ;#  Min TLUplus file
/mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmin.tluplus
set MIN_ROUTING_LAYER            "li1"    ;# Min routing layer
li1
set MAX_ROUTING_LAYER            "met5"   ;# Max routing layer
met5
set LIBRARY_DONT_USE_FILE        ""   ;# Tcl file with library modifications for dont_use
set LIBRARY_DONT_USE_PRE_COMPILE_LIST ""; #Tcl file for customized don't use list before first compile
set LIBRARY_DONT_USE_PRE_INCR_COMPILE_LIST "";# Tcl file with library modifications for dont_use before incr compile
##########################################################################################
# Multivoltage Common Variables
#
# Define the following multivoltage common variables for the reference methodology scripts 
# for multivoltage flows. 
# Use as few or as many of the following definitions as needed by your design.
##########################################################################################
set PD1                          ""           ;# Name of power domain/voltage area  1
set VA1_COORDINATES              {}           ;# Coordinates for voltage area 1
set MW_POWER_NET1                "VDD1"       ;# Power net for voltage area 1
VDD1
set PD2                          ""           ;# Name of power domain/voltage area  2
set VA2_COORDINATES              {}           ;# Coordinates for voltage area 2
set MW_POWER_NET2                "VDD2"       ;# Power net for voltage area 2
VDD2
set PD3                          ""           ;# Name of power domain/voltage area  3
set VA3_COORDINATES              {}           ;# Coordinates for voltage area 3
set MW_POWER_NET3                "VDD3"       ;# Power net for voltage area 3
VDD3
set PD4                          ""           ;# Name of power domain/voltage area  4
set VA4_COORDINATES              {}           ;# Coordinates for voltage area 4
set MW_POWER_NET4                "VDD4"       ;# Power net for voltage area 4
VDD4
puts "RM-Info: Completed script [info script]\n"
RM-Info: Completed script /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_setup/common_setup.tcl

source -echo -verbose ./rm_setup/dc_setup_filenames.tcl
puts "RM-Info: Running script [info script]\n"
RM-Info: Running script /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_setup/dc_setup_filenames.tcl

#################################################################################
# Design Compiler Reference Methodology Filenames Setup
# Script: dc_setup_filenames.tcl
# Version: P-2019.03-SP2 
# Copyright (C) 2010-2019 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# Use this file to customize the filenames used in the Design Compiler
# Reference Methodology scripts.  This file is designed to be sourced at the
# beginning of the dc_setup.tcl file after sourcing the common_setup.tcl file.
#
# Note that the variables presented in this file depend on the type of flow
# selected when generating the reference methodology files.
#
# Example.
#    If you set DFT flow as FALSE, you will not see DFT related filename
#    variables in this file.
#
# When reusing this file for different flows or newer release, ensure that
# all the required filename variables are defined.  One way to do this is
# to source the default dc_setup_filenames.tcl file and then override the
# default settings as needed for your design.
#
# The default values are backwards compatible with older
# Design Compiler Reference Methodology releases.
#
# Note: Care should be taken when modifying the names of output files
#       that are used in other scripts or tools.
#################################################################################
#################################################################################
# General Flow Files
#################################################################################
##########################
# Milkyway Library Names #
##########################
set DCRM_MW_LIBRARY_NAME                                ${DESIGN_NAME}_LIB
counter_LIB
set DCRM_FINAL_MW_CEL_NAME                              ${DESIGN_NAME}_DCT
counter_DCT
#####################
# MCMM File Names   #
#####################
set DCRM_MCMM_SCENARIOS_SETUP_FILE                      ./rm_dc_scripts/dc.mcmm.scenarios.tcl
./rm_dc_scripts/dc.mcmm.scenarios.tcl
set DCRM_MCMM_SCENARIOS_REPORT                          ${DESIGN_NAME}.mcmm.scenarios.rpt
counter.mcmm.scenarios.rpt
# The following procedure is used to control the naming of the scenario-specific
# MCMM input and output files. 
# By default the naming convention inserts the scenario name before the file 
# extension.
# Modify this procedure if you want to use different name convention for the 
# scenario-specific file naming.
proc dcrm_mcmm_filename { filename scenario } {
  return [file rootname $filename].$scenario[file extension $filename]
}
###############
# Input Files #
###############
set DCRM_SDC_INPUT_FILE                                 ${DESIGN_NAME}.sdc
counter.sdc
set DCRM_CONSTRAINTS_INPUT_FILE                         ${DESIGN_NAME}.constraints.tcl
counter.constraints.tcl
###########
# Reports #
###########
set DCRM_CHECK_LIBRARY_REPORT                           ${DESIGN_NAME}.check_library.rpt
counter.check_library.rpt
set DCRM_CONSISTENCY_CHECK_ENV_FILE                     ${DESIGN_NAME}.compile_ultra.env
counter.compile_ultra.env
set DCRM_CHECK_DESIGN_REPORT                            ${DESIGN_NAME}.check_design.rpt
counter.check_design.rpt
set DCRM_ANALYZE_DATAPATH_EXTRACTION_REPORT             ${DESIGN_NAME}.analyze_datapath_extraction.rpt
counter.analyze_datapath_extraction.rpt
set DCRM_FINAL_QOR_REPORT                               ${DESIGN_NAME}.mapped.qor.rpt
counter.mapped.qor.rpt
set DCRM_FINAL_TIMING_REPORT                            ${DESIGN_NAME}.mapped.timing.rpt
counter.mapped.timing.rpt
set DCRM_FINAL_AREA_REPORT                              ${DESIGN_NAME}.mapped.area.rpt
counter.mapped.area.rpt
set DCRM_FINAL_POWER_REPORT                             ${DESIGN_NAME}.mapped.power.rpt
counter.mapped.power.rpt
set DCRM_FINAL_CLOCK_GATING_REPORT                      ${DESIGN_NAME}.mapped.clock_gating.rpt
counter.mapped.clock_gating.rpt
set DCRM_FINAL_SELF_GATING_REPORT                       ${DESIGN_NAME}.mapped.self_gating.rpt
counter.mapped.self_gating.rpt
set DCRM_THRESHOLD_VOLTAGE_GROUP_REPORT                 ${DESIGN_NAME}.mapped.threshold.voltage.group.rpt
counter.mapped.threshold.voltage.group.rpt
set DCRM_INSTANTIATE_CLOCK_GATES_REPORT                 ${DESIGN_NAME}.instantiate_clock_gates.rpt
counter.instantiate_clock_gates.rpt
set DCRM_FINAL_DESIGNWARE_AREA_REPORT                   ${DESIGN_NAME}.mapped.designware_area.rpt
counter.mapped.designware_area.rpt
set DCRM_FINAL_RESOURCES_REPORT                         ${DESIGN_NAME}.mapped.final_resources.rpt
counter.mapped.final_resources.rpt
set DCRM_MULTIBIT_CREATE_REGISTER_BANK_FILE             ${DESIGN_NAME}.register_bank.rpt
counter.register_bank.rpt
set DCRM_MULTIBIT_CREATE_REGISTER_BANK_REPORT           ${DESIGN_NAME}.register_bank_report_file.rpt 
counter.register_bank_report_file.rpt
set DCRM_MULTIBIT_COMPONENTS_REPORT                     ${DESIGN_NAME}.multibit.components.rpt
counter.multibit.components.rpt
set DCRM_MULTIBIT_BANKING_REPORT                        ${DESIGN_NAME}.multibit.banking.rpt
counter.multibit.banking.rpt
################
# Output Files #
################
set DCRM_AUTOREAD_RTL_SCRIPT                            ${DESIGN_NAME}.autoread_rtl.tcl
counter.autoread_rtl.tcl
set DCRM_ELABORATED_DESIGN_DDC_OUTPUT_FILE              ${DESIGN_NAME}.elab.ddc
counter.elab.ddc
set DCRM_COMPILE_ULTRA_DDC_OUTPUT_FILE                  ${DESIGN_NAME}.compile_ultra.ddc
counter.compile_ultra.ddc
set DCRM_FINAL_DDC_OUTPUT_FILE                          ${DESIGN_NAME}.mapped.ddc
counter.mapped.ddc
set DCRM_FINAL_PG_VERILOG_OUTPUT_FILE                   ${DESIGN_NAME}.mapped.pg.v
counter.mapped.pg.v
set DCRM_FINAL_VERILOG_OUTPUT_FILE                      ${DESIGN_NAME}.mapped.v
counter.mapped.v
set DCRM_FINAL_SDC_OUTPUT_FILE                          ${DESIGN_NAME}.mapped.sdc
counter.mapped.sdc
set DCRM_FINAL_DESIGN_ICC2                              ICC2_files
ICC2_files
#################################################################################
# DCT Flow Files
#################################################################################
###################
# DCT Input Files #
###################
set DCRM_DCT_DEF_INPUT_FILE                             ${DESIGN_NAME}.def
counter.def
set DCRM_DCT_FLOORPLAN_INPUT_FILE                       ${DESIGN_NAME}.fp
counter.fp
set DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE            ${DESIGN_NAME}.physical_constraints.tcl
counter.physical_constraints.tcl
###############
# DCT Reports #
###############
set DCRM_DCT_PHYSICAL_CONSTRAINTS_REPORT                ${DESIGN_NAME}.physical_constraints.rpt
counter.physical_constraints.rpt
set DCRM_DCT_FINAL_CONGESTION_REPORT                    ${DESIGN_NAME}.mapped.congestion.rpt
counter.mapped.congestion.rpt
set DCRM_DCT_FINAL_CONGESTION_MAP_OUTPUT_FILE           ${DESIGN_NAME}.mapped.congestion_map.png
counter.mapped.congestion_map.png
set DCRM_DCT_FINAL_CONGESTION_MAP_WINDOW_OUTPUT_FILE    ${DESIGN_NAME}.mapped.congestion_map_window.png
counter.mapped.congestion_map_window.png
set DCRM_ANALYZE_RTL_CONGESTION_REPORT_FILE             ${DESIGN_NAME}.analyze_rtl_congetion.rpt
counter.analyze_rtl_congetion.rpt
set DCRM_DCT_FINAL_QOR_SNAPSHOT_FOLDER                  ${DESIGN_NAME}.qor_snapshot
counter.qor_snapshot
set DCRM_DCT_FINAL_QOR_SNAPSHOT_REPORT                  ${DESIGN_NAME}.qor_snapshot.rpt
counter.qor_snapshot.rpt
####################
# DCT Output Files #
####################
set DCRM_DCT_FLOORPLAN_OUTPUT_FILE                      ${DESIGN_NAME}.initial.fp
counter.initial.fp
set DCRM_DCT_FINAL_FLOORPLAN_OUTPUT_FILE                ${DESIGN_NAME}.mapped.fp
counter.mapped.fp
set DCRM_DCT_FINAL_SPEF_OUTPUT_FILE                     ${DESIGN_NAME}.mapped.spef
counter.mapped.spef
set DCRM_DCT_FINAL_SDF_OUTPUT_FILE                      ${DESIGN_NAME}.mapped.sdf
counter.mapped.sdf
# Uncomment the DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE variable setting to save the
# standard cell placement for physical guidance flow when ASCII hand-off to IC Compiler 
# is used.  
# set DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE                  ${DESIGN_NAME}.mapped.std_cell.def
#################################################################################
# DFT Flow Files
#################################################################################
###################
# DFT Input Files #
###################
set DCRM_DFT_SIGNAL_SETUP_INPUT_FILE                    ${DESIGN_NAME}.dft_signal_defs.tcl
counter.dft_signal_defs.tcl
set DCRM_DFT_AUTOFIX_CONFIG_INPUT_FILE                  ${DESIGN_NAME}.dft_autofix_config.tcl
counter.dft_autofix_config.tcl
###############
# DFT Reports #
###############
set DCRM_DFT_DRC_CONFIGURED_VERBOSE_REPORT              ${DESIGN_NAME}.dft_drc_configured.rpt
counter.dft_drc_configured.rpt
set DCRM_DFT_SCAN_CONFIGURATION_REPORT                  ${DESIGN_NAME}.scan_config.rpt
counter.scan_config.rpt
set DCRM_DFT_COMPRESSION_CONFIGURATION_REPORT           ${DESIGN_NAME}.compression_config.rpt
counter.compression_config.rpt
set DCRM_DFT_PREVIEW_CONFIGURATION_REPORT               ${DESIGN_NAME}.report_dft_insertion_config.preview_dft.rpt
counter.report_dft_insertion_config.preview_dft.rpt
set DCRM_DFT_PREVIEW_DFT_SUMMARY_REPORT                 ${DESIGN_NAME}.preview_dft_summary.rpt
counter.preview_dft_summary.rpt
set DCRM_DFT_PREVIEW_DFT_ALL_REPORT                     ${DESIGN_NAME}.preview_dft.rpt
counter.preview_dft.rpt
set DCRM_DFT_FINAL_SCAN_PATH_REPORT                     ${DESIGN_NAME}.mapped.scanpath.rpt
counter.mapped.scanpath.rpt
set DCRM_DFT_DRC_FINAL_REPORT                           ${DESIGN_NAME}.mapped.dft_drc_inserted.rpt
counter.mapped.dft_drc_inserted.rpt
set DCRM_DFT_FINAL_SCAN_COMPR_SCAN_PATH_REPORT          ${DESIGN_NAME}.mapped.scanpath.scan_compression.rpt
counter.mapped.scanpath.scan_compression.rpt
set DCRM_DFT_DRC_FINAL_SCAN_COMPR_REPORT                ${DESIGN_NAME}.mapped.dft_drc_inserted.scan_compression.rpt
counter.mapped.dft_drc_inserted.scan_compression.rpt
set DCRM_DFT_FINAL_CHECK_SCAN_DEF_REPORT                ${DESIGN_NAME}.mapped.check_scan_def.rpt
counter.mapped.check_scan_def.rpt
set DCRM_DFT_FINAL_DFT_SIGNALS_REPORT                   ${DESIGN_NAME}.mapped.dft_signals.rpt
counter.mapped.dft_signals.rpt
####################
# DFT Output Files #
####################
set DCRM_DFT_FINAL_SCANDEF_OUTPUT_FILE                  ${DESIGN_NAME}.mapped.scandef
counter.mapped.scandef
set DCRM_DFT_FINAL_EXPANDED_SCANDEF_OUTPUT_FILE         ${DESIGN_NAME}.mapped.expanded.scandef
counter.mapped.expanded.scandef
set DCRM_DFT_FINAL_CTL_OUTPUT_FILE                      ${DESIGN_NAME}.mapped.ctl
counter.mapped.ctl
set DCRM_DFT_FINAL_PROTOCOL_OUTPUT_FILE                 ${DESIGN_NAME}.mapped.scan.spf
counter.mapped.scan.spf
set DCRM_DFT_FINAL_SCAN_COMPR_PROTOCOL_OUTPUT_FILE      ${DESIGN_NAME}.mapped.scancompress.spf
counter.mapped.scancompress.spf
#################################################################################
# Formality Flow Files
#################################################################################
set DCRM_SVF_OUTPUT_FILE                                ${DESIGN_NAME}.mapped.svf
counter.mapped.svf
set FMRM_UNMATCHED_POINTS_REPORT                        ${DESIGN_NAME}.fmv_unmatched_points.rpt
counter.fmv_unmatched_points.rpt
set FMRM_FAILING_SESSION_NAME                           ${DESIGN_NAME}
counter
set FMRM_FAILING_POINTS_REPORT                          ${DESIGN_NAME}.fmv_failing_points.rpt
counter.fmv_failing_points.rpt
set FMRM_ABORTED_POINTS_REPORT                          ${DESIGN_NAME}.fmv_aborted_points.rpt
counter.fmv_aborted_points.rpt
set FMRM_ANALYZE_POINTS_REPORT                          ${DESIGN_NAME}.fmv_analyze_points.rpt
counter.fmv_analyze_points.rpt
puts "RM-Info: Completed script [info script]\n"
RM-Info: Completed script /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_setup/dc_setup_filenames.tcl

puts "RM-Info: Running script [info script]\n"
RM-Info: Running script /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_setup/dc_setup.tcl

#################################################################################
# Design Compiler Reference Methodology Setup for Top-Down MCMM Flow
# Script: dc_setup.tcl
# Version: P-2019.03-SP2 
# Copyright (C) 2007-2019 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# Setup Variables
#
# Modify settings in this section to customize your Design Compiler Reference 
# Methodology run.
# Portions of dc_setup.tcl may be used by other tools so program name checks
# are performed where necessary.
#################################################################################
# The following setting removes new variable info messages from the end of the log file
set_app_var sh_new_variable_message false
false
if {$synopsys_program_name == "dc_shell" || $synopsys_program_name == "dcnxt_shell"}  {

  #################################################################################
  # Design Compiler Setup Variables
  #################################################################################

  # Use the set_host_options command to enable multicore optimization to improve runtime.
  # This feature has special usage and license requirements.  Refer to the 
  # "Support for Multicore Technology" section in the Design Compiler User Guide
  # for multicore usage guidelines.
  # Note: This is a DC Ultra feature and is not supported in DC Expert.

   set_host_options -max_cores 4

  if {[shell_is_dcnxt_shell]} {
  set_host_options -max_cores 8
  }


  # Change alib_library_analysis_path to point to a central cache of analyzed libraries
  # to save runtime and disk space.  The following setting only reflects the
  # default value and should be changed to a central location for best results.

  set_app_var alib_library_analysis_path .

  # Add any additional Design Compiler variables needed here

}
.
set RTL_SOURCE_FILES  "counter.v"      ;# Enter the list of source RTL files if reading from RTL
counter.v
# The following variables are used by scripts in the rm_dc_scripts folder to direct 
# the location of the output files.
set REPORTS_DIR "reports"
reports
set RESULTS_DIR "results"
results
file mkdir ${REPORTS_DIR}
file mkdir ${RESULTS_DIR}
#set variable OPTIMIZATION_FLOW from following RM+ flows
#High Performance Low Power (hplp)
#High Connectivity (hc)
#Runtime Exploration (rtm_exp)
set OPTIMIZATION_FLOW  "" ;# Specify one flow out of hplp | hc | rtm_exp
#################################################################################
# Search Path Setup
#
# Set up the search path to find the libraries and design files.
#################################################################################
set_app_var search_path ". ${ADDITIONAL_SEARCH_PATH} $search_path"
. ../src/rtl/counter . /mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/libraries/syn /mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/dw/syn_ver /mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/dw/sim_ver
#################################################################################
# Library Setup
#
# This section is designed to work with the settings from common_setup.tcl
# without any additional modification.
#################################################################################
# Milkyway variable settings
# Make sure to define the Milkyway library variable
# mw_design_library, it is needed by write_milkyway command
set mw_reference_library ${MW_REFERENCE_LIB_DIRS}
/mnt/coe/workspace/ece/ece720-common/tech/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs
set mw_design_library ${DCRM_MW_LIBRARY_NAME}
counter_LIB
set mw_site_name_mapping { {CORE unit} {Core unit} {core unit} }
 {CORE unit} {Core unit} {core unit} 
# The remainder of the setup below should only be performed in Design Compiler
if {$synopsys_program_name == "dc_shell" || $synopsys_program_name == "dcnxt_shell"}  {

  set_app_var target_library ${TARGET_LIBRARY_FILES}
  set_app_var synthetic_library dw_foundation.sldb

   if { $OPTIMIZATION_FLOW == "hplp" } {
  # Enabling the usage of DesignWare minPower Components requires additional DesignWare-LP license
  # set_app_var synthetic_library "dw_minpower.sldb  dw_foundation.sldb"
   }

  set_app_var link_library "* $target_library $ADDITIONAL_LINK_LIB_FILES $synthetic_library"

  # To apply the same min library to all scenarios for Multicorner-Multimode (MCMM), 
  # uncomment the following to use set_min_library here.  Otherwise specify the min library
  # with set_operating_conditions for each scenario in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}.

  # foreach {max_library min_library} $MIN_LIBRARY_FILES {
  #   set_min_library $max_library -min_version $min_library
  # }

  # Set the variable to use Verilog libraries for Test Design Rule Checking
  # (See dc.tcl for details)

  # set_app_var test_simulation_library <list of Verilog library files>

  if {[shell_is_in_topographical_mode]} {

    # To activate the extended layer mode to support 4095 layers uncomment the extend_mw_layers command 
    # before creating the Milkyway library. The extended layer mode is permanent and cannot be reverted 
    # back to the 255 layer mode once activated.

    # extend_mw_layers

    # Only create new Milkyway design library if it doesn't already exist
    if {![file isdirectory $mw_design_library ]} {
      create_mw_lib   -technology $TECH_FILE                       -mw_reference_library $mw_reference_library                       $mw_design_library
    } else {
      # If Milkyway design library already exists, ensure that it is consistent with specified Milkyway reference libraries
      set_mw_lib_reference $mw_design_library -mw_reference_library $mw_reference_library
    }

    open_mw_lib     $mw_design_library

    set_check_library_options -mcmm
    check_library > ${REPORTS_DIR}/${DCRM_CHECK_LIBRARY_REPORT}

    # For MCMM flow, do not set_tlu_plus_files here.  TLUPlus files should be
    # set up for each scenario in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}
  }

  #################################################################################
  # Library Modifications
  #
  # Apply library modifications after the libraries are loaded.
  #################################################################################

  if {[file exists [which ${LIBRARY_DONT_USE_FILE}]]} {
    puts "RM-Info: Sourcing script file [which ${LIBRARY_DONT_USE_FILE}]\n"
    source -echo -verbose ${LIBRARY_DONT_USE_FILE}
  }
    #set LIBRARY_DONT_USE_PRE_COMPILE_LIST  "./rm_dc_scripts/snpsll_hpdu_synth.tcl";# Tcl file for Synopsys Logic Library don't use list before first compile          
    set LIBRARY_DONT_USE_PRE_COMPILE_LIST  "";
}
Start to load technology file /mnt/coe/workspace/ece/ece720-common/tech/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs.tf.
Warning: Layer 'li1' has invalid fat table thresholds '(0)'. (line 109) (TFCHK-086)
Warning: Layer 'met5' has invalid fat table thresholds '(0)'. (line 350) (TFCHK-086)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 818) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 818) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via4' and 'met4'. (line 818) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 826) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 826) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via4' and 'met5'. (line 826) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 834) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 834) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via3' and 'met3'. (line 834) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 842) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 842) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via3' and 'met4'. (line 842) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 850) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 850) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via2' and 'met2'. (line 850) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 858) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 858) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via2' and 'met3'. (line 858) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 866) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 866) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via' and 'met1'. (line 866) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 874) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 874) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'via' and 'met2'. (line 874) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 882) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 882) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'mcon' and 'li1'. (line 882) (TFCHK-080)
Warning: DesignRule '' is missing the attribute 'stackable'. (line 890) (TFCHK-014)
Warning: Layer '' is missing the attribute 'maxStackLevel'. (line 890) (TFCHK-014)
Warning: DesignRule is defined with non-consecutive layers 'mcon' and 'met1'. (line 890) (TFCHK-080)
Warning: Layer 'li1' has a pitch 0.48 that does not match the recommended wire-to-via pitch 0.34. (TFCHK-049)
Warning: Layer 'met2' has a pitch 0.48 that does not match the recommended wire-to-via pitch 0.395. (TFCHK-049)
Warning: Layer 'met3' has a pitch 0.74 that does not match the recommended wire-to-via pitch 0.64. (TFCHK-049)
Warning: Layer 'met4' has a pitch 0.96 that does not match the recommended wire-to-via pitch 1.04. (TFCHK-049)
Warning: Layer 'met5' has a pitch 3.33 that does not match the recommended wire-to-via pitch 3.11. (TFCHK-049)
Warning: CapModel sections are missing. Capacitance models should be loaded with a TLU+ file later. (TFCHK-084)
Technology file /mnt/coe/workspace/ece/ece720-common/tech/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs.tf has been loaded successfully.
puts "RM-Info: Completed script [info script]\n"
RM-Info: Completed script /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_setup/dc_setup.tcl

#################################################################################
# Design Compiler Reference Methodology Script for Top-Down MCMM Flow
# Script: dc.tcl
# Version: P-2019.03-SP2  
# Copyright (C) 2007-2019 Synopsys, Inc. All rights reserved.
#################################################################################
# Design Compiler must be run in topographical mode for MCMM flow support
# MCMM also requires a license for Design Compiler Graphical
if {![shell_is_in_topographical_mode]} {
  puts "RM-Error: dc_shell must be run in topographical mode for MCMM support."
  exit 1
}
# Design Compiler must be run in topographical mode for SPG flow support
# SPG also requires a license for Design Compiler Graphical
if {![shell_is_in_topographical_mode]} {
  puts "RM-Error: dc_shell must be run in topographical mode for SPG support."
  exit 1
}
#################################################################################
# Additional Variables
#
# Add any additional variables needed for your flow here.
#################################################################################
################################################################################
# You can enable inference of multibit registers from the buses defined in the RTL.
# The replacement of single-bit cells with multibit library cells occurs during execution 
# of the compile_ultra command. This variable has to be set before reading the RTL
#
# set_app_var hdlin_infer_multibit default_all
#################################################################################
if { $OPTIMIZATION_FLOW == "hplp"} {
 set_app_var hdlin_infer_multibit default_all
}
# Enable the support of via resistance for RC estimation to improve the timing 
# correlation with IC Compiler
set_app_var spg_enable_via_resistance_support true
true
if {[file exists [which ${LIBRARY_DONT_USE_PRE_COMPILE_LIST}]]} {
  puts "RM-Info: Sourcing script file [which ${LIBRARY_DONT_USE_PRE_COMPILE_LIST}]\n"
  source -echo -verbose $LIBRARY_DONT_USE_PRE_COMPILE_LIST
}
#################################################################################
# Setup for Formality Verification
#################################################################################
# In the event of an inconclusive (or hard) verification, we recommend using
# the set_verification_priority commands provided from the analyze_points command
# in Formality. The set_verification_priority commands target specific
# operators to reduce verification complexity while minimizing QoR impact.
# The set_verification_priority commands should be applied after the design
# is read and elaborated.
# For designs that don't have tight QoR constraints and don't have register retiming,
# you can use the following variable to enable the highest productivity single pass flow.
# This flow modifies the optimizations to make verification easier.
# This variable setting should be applied prior to reading in the RTL for the design.
# set_app_var simplified_verification_mode true
# For more information about facilitating formal verification in the flow, refer
# to the following SolvNet article:
# "Resolving Inconclusive and Hard Verifications in Design Compiler"
# https://solvnet.synopsys.com/retrieve/033140.html
# Define the verification setup file for Formality
set_svf ${RESULTS_DIR}/${DCRM_SVF_OUTPUT_FILE}
1
#################################################################################
# Setup SAIF Name Mapping Database
#
# Include an RTL SAIF for better power optimization and analysis.
#
# saif_map should be issued prior to RTL elaboration to create a name mapping
# database for better annotation.
################################################################################
saif_map -start
Information: The SAIF name mapping information database is now active. (PWR-602)
1
#################################################################################
# Read in the RTL Design
#
# Read in the RTL source files or read in the elaborated design (.ddc).
#################################################################################
define_design_lib WORK -path ./WORK
1
###The following variable helps verification when there are differences between DC and FM while inferring logical hierarchies 
set_app_var hdlin_enable_hier_map true
true
analyze -format verilog ${RTL_SOURCE_FILES}
Running PRESTO HDLC
Compiling source file ../src/rtl/counter/counter.v
Presto compilation completed successfully.
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db'
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db'
Loading db file '/mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/libraries/syn/dw_foundation.sldb'
1
elaborate ${DESIGN_NAME}
Loading db file '/mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/libraries/syn/gtech.db'
Loading db file '/mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/libraries/syn/standard.sldb'
  Loading link library 'sky130_fd_sc_hs'
  Loading link library 'sky130_fd_sc_hs'
  Loading link library 'gtech'
Running PRESTO HDLC

Inferred memory devices in process
	in routine counter line 40 in file
		'../src/rtl/counter/counter.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      value_reg      | Flip-flop |   4   |  Y  | N  | N  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (counter)
Elaborated 1 design.
Current design is now 'counter'.
1
set_verification_top
1
# OR
# You can read an elaborated design from the same release.
# Using an elaborated design from an older release will not give the best results.
# read_ddc ${DCRM_ELABORATED_DESIGN_DDC_OUTPUT_FILE}
write -hierarchy -format ddc -output ${RESULTS_DIR}/${DCRM_ELABORATED_DESIGN_DDC_OUTPUT_FILE}
Writing ddc file 'results/counter.elab.ddc'.
1
#################################################################################
# sets the multibit_mode attribute
#################################################################################
if { $OPTIMIZATION_FLOW == "hplp"} {
  # Enable mapping to multibit only if the timing is not degraded.Adjust the critical Range as required by the design.
    set_multibit_options -mode timing_only -critical_range 0.1
}
#################################################################################
# Reports pre-synthesis congestion analysis.
#################################################################################
if { $OPTIMIZATION_FLOW == "hc"} {
  #Analyze the RTL constructs which may lead to congestion
  analyze_rtl_congestion > ${REPORTS_DIR}/${DCRM_ANALYZE_RTL_CONGESTION_REPORT_FILE}
}
#################################################################################
# Apply Logical Design Constraints
#################################################################################
# For MCMM, do not apply the constraints here.  Constraints should be
# applied for each scenario in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}
#################################################################################
# Apply The Operating Conditions
#################################################################################
# For MCMM, do not apply the operating conditions here.  Operating conditions
# should be applied for each scenario in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}
#################################################################################
# Set Up the Multicorner Multimode (MCMM) Scenarios
#
# Note: The MCMM flow is only supported in topographical mode and it requires
#       a license for Design Compiler Graphical. 
#################################################################################
# Use the dc.mcmm.scenarios.tcl example file as as reference for
# what should be included in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}
puts "RM-Info: Sourcing script file [which ${DCRM_MCMM_SCENARIOS_SETUP_FILE}]\n"
RM-Info: Sourcing script file /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/rm_dc_scripts/dc.mcmm.scenarios.tcl

source -echo -verbose ${DCRM_MCMM_SCENARIOS_SETUP_FILE}
#################################################################################
# Design Compiler MCMM Scenarios Setup File Reference
# Script: dc.mcmm.scenarios.tcl
# Version: P-2019.03-SP2  
# Copyright (C) 2011-2019 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# This is an example of the MCMM scenarios setup file for Design Compiler.
# Please note that this file will not work as given and must be edited for your
# design.
#
# Create this file for each design in your MCMM flow and configure the filename
# with the value of the ${DCRM_MCMM_SCENARIOS_SETUP_FILE} in
# rm_setup/dc_setup_filenames.tcl
#
# It is recommended to use a minimum set of worst case setup scenarios
# and a worst case leakage scenario in Design Compiler.
# Further refinement to optimize across all possible scenarios is recommended
# to be done in IC Compiler.
#################################################################################
#################################################################################
# Additional Notes
#################################################################################
#
# In MCMM, good leakage and dynamic power optimization results can be obtained by
# using a worst case leakage scenario along with scenario-independent clock gating
# (compile_ultra -gate_clock).
#
# For low power placement to work, it is required to have at least one scenario with 
# dynamic power optimization enabled.
#
#    set_scenario_options -dynamic_power true ...
#
# A recommended scenario naming convention (used by Lynx) is the following:
#
# <MM_TYPE>.<OC_TYPE>.<RC_TYPE>
#
# MM_TYPE - Label that identifies the operating mode or set of timing constraints
#           Example values: mode_norm, mode_slow, mode_test
#
# OC_TYPE - Label that identifies the library operating conditions or PVT corner
#           Example values: OC_WC, OC_BC, OC_TYP, OC_LEAK, OC_TEMPINV
#
# RC_TYPE - Label that identifies an extraction corner (TLUPlus files)
#           Example values: RC_MAX_1, RC_MIN_1, RC_TYP
#################################################################################
#################################################################################
# Worst Case Setup Scenario
#################################################################################
set scenario mode_norm.slow.RCmax
mode_norm.slow.RCmax
create_scenario ${scenario}
Warning: Discarding all scenario specific information previously defined in this session. (UID-1008)
Current scenario is: mode_norm.slow.RCmax
1
# Read in scenario-specific constraints file
puts "RM-Info: Sourcing script file ${DCRM_CONSTRAINTS_INPUT_FILE}\n"
RM-Info: Sourcing script file counter.constraints.tcl

source ${DCRM_CONSTRAINTS_INPUT_FILE}
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
1
#puts "RM-Info: Reading SDC file [which [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]]\n"
#read_sdc ${DCRM_SDC_INPUT_FILE}
set_operating_conditions -library sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db:sky130_fd_sc_hs  max
Using operating conditions 'max' found in library 'sky130_fd_sc_hs'.
1
set_tlu_plus_files -max_tluplus ${TLUPLUS_MAX_FILE}                    -tech2itf_map ${MAP_FILE}
1
check_tlu_plus_files

Sanity check for TLU+ vs MW-Tech files:
 mapping_file: /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/layer.map
 number of unique tlu+ files in mcmm mode: 1
  /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmax.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
1
# Include scenario specific SAIF file, if possible, for power analysis.
# Otherwise, the default toggle rate of 0.1 will be used for propagating
# switching activity.
# read_saif -auto_map_names -input ${DESIGN_NAME}.${scenario}.saif -instance < DESIGN_INSTANCE > -verbose
# Set options for worst case setup scenario
set_scenario_options -setup true -hold false -leakage_power false
1
report_scenario_options
 
****************************************
Report : scenario_options
Design : counter
Scenario(s): mode_norm.slow.RCmax
Version: S-2021.06-SP3
Date   : Wed Sep  6 16:27:43 2023
****************************************

Scenario: mode_norm.slow.RCmax is active.
 setup         : true 
 hold          : false 
 leakage_power : false 
 dynamic_power : false 

 cts_mode      : false 
 cts_corner    : none 

1
#################################################################################
# Hold Scenario
#################################################################################
set scenario mode_norm.fast.RCmin
mode_norm.fast.RCmin
create_scenario ${scenario}
Current scenario is: mode_norm.fast.RCmin
1
# Read in scenario-specific constraints file
puts "RM-Info: Sourcing script file ${DCRM_CONSTRAINTS_INPUT_FILE}\n"
RM-Info: Sourcing script file counter.constraints.tcl

source ${DCRM_CONSTRAINTS_INPUT_FILE}
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
1
#puts "RM-Info: Reading SDC file [which [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]]\n"
#read_sdc ${DCRM_SDC_INPUT_FILE}
set_operating_conditions -library sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db:sky130_fd_sc_hs min
Using operating conditions 'min' found in library 'sky130_fd_sc_hs'.
1
set_tlu_plus_files -max_tluplus ${TLUPLUS_MIN_FILE}                    -tech2itf_map ${MAP_FILE}
1
check_tlu_plus_files

Sanity check for TLU+ vs MW-Tech files:
 mapping_file: /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/layer.map
 number of unique tlu+ files in mcmm mode: 2
  /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmax.tluplus
  /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmin.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
1
# Include scenario specific SAIF file, if possible, for power analysis.
# Otherwise, the default toggle rate of 0.1 will be used for propagating
# switching activity.
# read_saif -auto_map_names -input ${DESIGN_NAME}.${scenario}.saif -instance < DESIGN_INSTANCE > -verbose
# Set options for worst case setup scenario
set_scenario_options -setup false -hold true -leakage_power true
1
report_scenario_options
 
****************************************
Report : scenario_options
Design : counter
Scenario(s): mode_norm.fast.RCmin
Version: S-2021.06-SP3
Date   : Wed Sep  6 16:27:43 2023
****************************************

Scenario: mode_norm.fast.RCmin is active.
 setup         : false 
 hold          : true 
 leakage_power : true 
 dynamic_power : false 

 cts_mode      : false 
 cts_corner    : none 

1
# Define additional setup scenarios here as needed, using the same format.
#################################################################################
# Worst Case Leakage Scenario
#################################################################################
#set scenario mode_norm.OC_LEAK.RC_MAX_1
#create_scenario ${scenario}
# Read in scenario-specific constraints file
#puts "RM-Info: Sourcing script file [which [dcrm_mcmm_filename ${DCRM_CONSTRAINTS_INPUT_FILE} ${scenario}]]\n"
#source [dcrm_mcmm_filename ${DCRM_CONSTRAINTS_INPUT_FILE} ${scenario}]
# puts "RM-Info: Reading SDC file [which [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]]\n"
# read_sdc [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]
#set_operating_conditions -max_library <OC_LEAK_LIB_NAME> -max <OC_LEAK>
#set_tlu_plus_files -max_tluplus <OC_LEAK_TLUPLUS_MAX_FILE> #                   -tech2itf_map ${MAP_FILE}
#check_tlu_plus_files
# Include scenario specific SAIF file, if possible, for power optimization and analysis.
# Otherwise, the default toggle rate of 0.1 will be used for propagating
# switching activity.
# read_saif -auto_map_names -input ${DESIGN_NAME}.${scenario}.saif -instance < DESIGN_INSTANCE > -verbose
# Set options for worst case leakage scenario
#set_scenario_options -setup false -hold false -leakage_power true
#report_scenario_options
# To get the best memory and runtime performance, only define scenarios
# needed for optimization in Design Compiler.
# If additional scenarios are also included, use the following command to
# select the set of desired scenarios for optimization.
# set_active_scenarios <list of scenarios for synthesis optimization>
report_scenarios > ${REPORTS_DIR}/${DCRM_MCMM_SCENARIOS_REPORT}
check_scenarios -output ${REPORTS_DIR}
Information: Timing data is not loaded for design (counter), skip check for design complexity
Report summary:
Information: TLU+ file (mode_norm.slow.RCmax: /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmax.tluplus) is under location different from design location.  (MCMM-231)
Information: TLU+ file (mode_norm.slow.RCmax: /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/layer.map) is under location different from design location.  (MCMM-231)
Information: TLU+ file (mode_norm.fast.RCmin: /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmin.tluplus) is under location different from design location.  (MCMM-231)
Information: TLU+ file (mode_norm.fast.RCmin: /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/layer.map) is under location different from design location.  (MCMM-231)
Warning: Design (counter) has missing library cells.  (MCMM-223)
Information: HTML report can be found at /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/reports/check_scenarios.html
1
#################################################################################
# Create Default Path Groups
#
# Separating these paths can help improve optimization.
# Remove these path group settings if user path groups have already been defined.
#################################################################################
set current_scenario_saved [current_scenario]
Current scenario is: mode_norm.fast.RCmin
mode_norm.fast.RCmin
foreach scenario [all_active_scenarios] {
  current_scenario ${scenario}
  set ports_clock_root [filter_collection [get_attribute [get_clocks] sources] object_class==port]
  group_path -name REGOUT -to [all_outputs] 
  group_path -name REGIN -from [remove_from_collection [all_inputs] ${ports_clock_root}] 
  group_path -name FEEDTHROUGH -from [remove_from_collection [all_inputs] ${ports_clock_root}] -to [all_outputs]
}
Current scenario is: mode_norm.slow.RCmax
Current scenario is: mode_norm.fast.RCmin
current_scenario ${current_scenario_saved}
Current scenario is: mode_norm.fast.RCmin
mode_norm.fast.RCmin
#################################################################################
# Power Optimization Section
#################################################################################
#############################################################################
# Clock Gating Setup
#############################################################################
# If your design has instantiated clock gates, you should use identify_clock_gating
# command to identify and the report_clock_gating -multi_stage to report them.
# identify_clock_gating
# report_clock_gating -multi_stage -nosplit > ${REPORTS_DIR}/${DCRM_INSTANTIATE_CLOCK_GATES_REPORT}
# If you do not want clock-gating to optimize your user instantiated
# clock-gating cells, you should set the pwr_preserve_cg attribute upon
# those clock-gating cells.
# set_preserve_clock_gate [get_cell <user_clock_gating_cells>]
# Default clock_gating_style suits most designs.  Change only if necessary.
# set_clock_gating_style -positive_edge_logic {integrated} -negative_edge_logic {integrated} -control_point before ...   
# Clock gate insertion is now performed during compile_ultra -gate_clock
# so insert_clock_gating is no longer recommended at this step.
# The following setting can be used to enable global clock gating.
# With global clock gating, common enables are extracted across hierarchies
# which results in fewer redundant clock gates. 
# set compile_clock_gating_through_hierarchy true 
# For better timing optimization of enable logic, clock latency for 
# clock gating cells can be optionally specified.
# set_clock_gate_latency -clock <clock_name> -stage <stage_num>     #         -fanout_latency {fanout_range1 latency_val1 fanout_range2 latency_val2 ...}
# You can use "set_self_gating_options" command to specify self-gating 
# options when -self_gating option is used in addition to -gate_clock 
# option at the compile_ultra command. To inserts self-gate on clock-gated
# registers, uncomment the following line:
# set_self_gating_options -interaction_with_clock_gating insert
# To improve enable timing in high performance designs, physically aware clock gating 
# is available in Design Compiler topographical for Synopsys Physical Guidance (SPG) 
# flow. This flow works best with a corresponding IC Compiler  SPG flow. To enable 
# physically aware clock gating in Design Compiler Graphical, uncomment the 
# following setting:
# set_app_var power_cg_physically_aware_cg true
#############################################################################
# Apply Power Optimization Constraints
#############################################################################
# For MCMM, do not apply the SAIF file here.  The SAIF file should be read in
# for each scenario in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}
# Low power placement may save additional dynamic power by shortening the net lengths 
# of nets with high switching activity, in physical guidance flow.
# Enable dynamic power optimization for low power placement to work.
# Reading a SAIF file is also recommended to get accurate switching activity information.
# For MCMM, at least one scenario must have dynamic power optimization enabled.
set_app_var compile_enable_total_power_optimization true
true
if {[shell_is_in_topographical_mode]} {
      # For multi-Vth design, replace the following to set the threshold voltage groups in the libraries.

      # set_attribute <my_hvt_lib> default_threshold_voltage_group HVT -type string
      # set_attribute <my_lvt_lib> default_threshold_voltage_group LVT -type string
    }
# Starting in J-2014.09, leakage optimization is the default flow and is always enabled.
# For MCMM, include a leakage scenario in the ${DCRM_MCMM_SCENARIOS_SETUP_FILE}.
# Power prediction with clock tree estimation is not supported with MCMM.
# Do not use the set_power_prediction command with MCMM designs.
set power_keep_license_after_power_commands true
true
foreach_in_collection reg [filter_collection [remove_from_collection [all_registers] [all_macro_cells]] "ff_edge_sense!=0"] {
       saif_map -set_name [get_object_name $reg] -type saif_name [get_cells $reg]
    }
Information: linking reference library : /mnt/coe/workspace/ece/ece720-common/tech/google/milkyway/sky130_fd_sc_hs/sky130_fd_sc_hs. (PSYN-878)

  Linking design 'counter'
  Using the following designs and libraries:
  --------------------------------------------------------------------------
  counter                     /mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/counter.db
  sky130_fd_sc_hs (library)   /mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db
  sky130_fd_sc_hs (library)   /mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db
  dw_foundation.sldb (library) /mnt/apps/public/COE/synopsys_apps/syn/S-2021.06-SP3/libraries/syn/dw_foundation.sldb

Information: No preferred routing direction found for design layer li1. Using reference direction V. (DCT-035)
Information: No preferred routing direction found for design layer met1. Using reference direction H. (DCT-035)
Information: No preferred routing direction found for design layer met2. Using reference direction V. (DCT-035)
Information: No preferred routing direction found for design layer met3. Using reference direction H. (DCT-035)
Information: No preferred routing direction found for design layer met4. Using reference direction V. (DCT-035)
Information: No preferred routing direction found for design layer met5. Using reference direction H. (DCT-035)
set power_keep_license_after_power_commands false
false
if {[shell_is_in_topographical_mode]} {

  ##################################################################################
  # Apply Physical Design Constraints
  #
  # Optional: Floorplan information can be read in here if available.
  # This is highly recommended for irregular floorplans.
  #
  # Floorplan constraints can be provided from one of the following sources:
  # * extract_physical_constraints with a DEF file
  #	* read_floorplan with a floorplan file (written by write_floorplan)
  #	* User generated Tcl physical constraints
  #
  ##################################################################################

  # Specify ignored layers for routing to improve correlation
  # Use the same ignored layers that will be used during place and route

  if { ${MIN_ROUTING_LAYER} != ""} {
    set_ignored_layers -min_routing_layer ${MIN_ROUTING_LAYER}
  }
  if { ${MAX_ROUTING_LAYER} != ""} {
    set_ignored_layers -max_routing_layer ${MAX_ROUTING_LAYER}
  }

  report_ignored_layers

  # If the macro names change after mapping and writing out the design due to
  # ungrouping or Verilog change_names renaming, it may be necessary to translate 
  # the names to correspond to the cell names that exist before compile.

  # During DEF constraint extraction, extract_physical_constraints automatically
  # matches DEF names back to precompile names in memory using standard matching rules.
  # read_floorplan will also automatically perform this name matching.

  # Modify set_query_rules if other characters are used for hierarchy separators
  # or bus names. 

  # set_query_rules  -hierarchical_separators {/ _ .}   #                  -bus_name_notations {[] __ ()}     #                  -class {cell pin port net}         #                  -wildcard                          #                  -regsub_cumulative                 #                  -show

  ## For DEF floorplan input

  # The DEF file for Design Compiler Topographical can be written from IC Compiler using the following 
  # recommended options:
  # icc_shell> write_def -version 5.7 -rows_tracks_gcells -fixed -pins -blockages -specialnets   #                      -vias -regions_groups -verbose -output ${DCRM_DCT_DEF_INPUT_FILE}

  if {[file exists [which ${DCRM_DCT_DEF_INPUT_FILE}]]} {
    # If you have physical only cells as a part of your floorplan DEF file, you can use
    # the -allow_physical_cells option with extract_physical_constraints to include
    # the physical only cells as a part of the floorplan in Design Compiler to improve correlation.
    #
    # Note: With -allow_physical_cells, new logical cells in the DEF file
    #       that have a fixed location will also be added to the design in memory.
    #       See the extract_physical_constraints manpage for more information about
    #       identifying the cells added to the design when using -allow_physical_cells.
  
    # extract_physical_constraints -allow_physical_cells ${DCRM_DCT_DEF_INPUT_FILE}

    puts "RM-Info: Reading in DEF file [which ${DCRM_DCT_DEF_INPUT_FILE}]\n"
    if { $OPTIMIZATION_FLOW == "hplp"} {
	extract_physical_constraints -allow_physical_cells ${DCRM_DCT_DEF_INPUT_FILE}  
    } else {
	extract_physical_constraints ${DCRM_DCT_DEF_INPUT_FILE}
    }
  }
  
  # OR

  ## For floorplan file input

  # The floorplan file for Design Compiler Topographical can be written from IC Compiler using the following 
  # recommended options:
  # Note: IC Compiler requires the use of -placement {terminal} with -create_terminal beginning in the
  #       D-2010.03-SP1 release.
  # icc_shell> write_floorplan -placement {io terminal hard_macro soft_macro} -create_terminal   #                            -row -create_bound -preroute -track ${DCRM_DCT_FLOORPLAN_INPUT_FILE}

  # Read in the secondary floorplan file, previously written by write_floorplan in Design Compiler,
  # to restore physical-only objects back to the design, before reading the main floorplan file.

  if {[file exists [which ${DCRM_DCT_FLOORPLAN_INPUT_FILE}.objects]]} {
    puts "RM-Info: Reading in secondary floorplan file [which ${DCRM_DCT_FLOORPLAN_INPUT_FILE}.objects]\n"
    read_floorplan ${DCRM_DCT_FLOORPLAN_INPUT_FILE}.objects
  }

  if {[file exists [which ${DCRM_DCT_FLOORPLAN_INPUT_FILE}]]} {
    puts "RM-Info: Reading in floorplan file [which ${DCRM_DCT_FLOORPLAN_INPUT_FILE}]\n"
    read_floorplan ${DCRM_DCT_FLOORPLAN_INPUT_FILE}
  }

  # OR

  ## For Tcl file input

  # For Tcl constraints, the name matching feature must be explicitly enabled
  # and will also use the set_query_rules setttings. This should be turned off
  # after the constraint read in order to minimize runtime.

  if {[file exists [which ${DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE}]]} {
    set_app_var enable_rule_based_query true
    puts "RM-Info: Sourcing script file [which ${DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE}]\n"
    source -echo -verbose ${DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE}
    set_app_var enable_rule_based_query false 
  }


  # Use write_floorplan to save the applied floorplan.

  # Note: A secondary floorplan file ${DCRM_DCT_FLOORPLAN_OUTPUT_FILE}.objects
  #       might also be written to capture physical-only objects in the design.
  #       This file should be read in before reading the main floorplan file.

  write_floorplan -all ${RESULTS_DIR}/${DCRM_DCT_FLOORPLAN_OUTPUT_FILE}

  # Verify that all the desired physical constraints have been applied
  # Add the -pre_route option to include pre-routes in the report
  report_physical_constraints > ${REPORTS_DIR}/${DCRM_DCT_PHYSICAL_CONSTRAINTS_REPORT}
}
Information: setting li1 as min routing layer.  (PSYN-179)
Information: setting met5 as max routing layer.  (PSYN-179)
No ignored layers specified.

Min_routing_layer: li1
Max_routing_layer: met5
Warning: File 'counter.def' was not found in search path. (CMD-030)
Warning: File 'counter.fp.objects' was not found in search path. (CMD-030)
Warning: File 'counter.fp' was not found in search path. (CMD-030)
Warning: File 'counter.physical_constraints.tcl' was not found in search path. (CMD-030)
#################################################################################
# Apply Additional Optimization Constraints
#################################################################################
# Prevent assignment statements in the Verilog netlist.
set_fix_multiple_port_nets -all -buffer_constants
1
#################################################################################
# Save the compile environment snapshot for the Consistency Checker utility.
#
# This utility checks for inconsistent settings between Design Compiler and
# IC Compiler which can contribute to correlation mismatches.
#
# Download this utility from SolvNet.  See the following SolvNet article for
# complete details:
#
# https://solvnet.synopsys.com/retrieve/026366.html
#
# The article is titled: "Using the Consistency Checker to Automatically Compare
# Environment Settings Between Design Compiler and IC Compiler"
#################################################################################
# Uncomment the following to snapshot the environment for the Consistency Checker
# for each active scenario.  You will also need to run the Consistency Checker
# utility for each scenario environment snapshot.
# set current_scenario_saved [current_scenario]
# foreach scenario [all_active_scenarios] {
#   current_scenario ${scenario}
#   write_environment -consistency -output ${REPORTS_DIR}/[dcrm_mcmm_filename ${DCRM_CONSISTENCY_CHECK_ENV_FILE} ${scenario}]
# }
# current_scenario ${current_scenario_saved}
#################################################################################
# Check for Design Problems 
#################################################################################
# Check the current design for consistency
check_design -summary
 
****************************************
check_design summary:
Version:     S-2021.06-SP3
Date:        Wed Sep  6 16:27:50 2023
****************************************

                   Name                                            Total
--------------------------------------------------------------------------------
Cells                                                               1
    Cells do not drive (LINT-1)                                     1
--------------------------------------------------------------------------------

Information: Use the 'check_design' command for 
	 more information about warnings. (LINT-98)

1
check_design > ${REPORTS_DIR}/${DCRM_CHECK_DESIGN_REPORT}
# The analyze_datapath_extraction command can help you to analyze why certain data 
# paths are no extracted, uncomment the following line to report analyisis.
# analyze_datapath_extraction > ${REPORTS_DIR}/${DCRM_ANALYZE_DATAPATH_EXTRACTION_REPORT}
#################################################################################
# Multibit Register Reports pre-compile_ultra
#################################################################################
#################################################################################
# Uncomment the next line to verify that the desired bussed registers are grouped as multibit components 
# These multibit components are mapped to multibit registers during compile_ultra
#
# redirect ${REPORTS_DIR}/${DCRM_MULTIBIT_COMPONENTS_REPORT} {report_multibit -hierarchical }
#################################################################################
if { $OPTIMIZATION_FLOW == "hplp"} {
    redirect ${REPORTS_DIR}/${DCRM_MULTIBIT_COMPONENTS_REPORT} {report_multibit -hierarchical }
}
#################################################################################
# Compile the Design
#
# Recommended Options:
#
#     -scan
#     -gate_clock (-self_gating)
#     -retime
#     -spg
#
# Use compile_ultra as your starting point. For test-ready compile, include
# the -scan option with the first compile and any subsequent compiles.
#
# Use -gate_clock to insert clock-gating logic during optimization.  This
# is now the recommended methodology for clock gating.
#
# Use -self_gating option in addition to -gate_clock for potentially saving 
# additional dynamic power, in topographical mode only. Registers that are 
# not clock gated will be considered for XOR self gating.
# XOR self gating should be performed along with clock gating, using -gate_clock
# and -self_gating options. XOR self gates will be inserted only if there is 
# potential power saving without degrading the timing.
# An accurate switching activity annotation either by reading in a saif 
# file or through set_switching_activity command is recommended.
# You can use "set_self_gating_options" command to specify self-gating 
# options.
#
# Use -retime to enable adaptive retiming optimization for further timing benefit.
#
# Use the -spg option to enable Design Compiler Graphical physical guidance flow.
# The physical guidance flow improves QoR, area and timing correlation, and congestion.
# It also improves place_opt runtime in IC Compiler.
#
# Note: In addition to -spg option you can enable the support of via resistance for 
#       RC estimation to improve the timing correlation with IC Compiler by using the 
#       following setting:
#
#       set_app_var spg_enable_via_resistance_support true
#
# You can selectively enable or disable the congestion optimization on parts of 
# the design by using the set_congestion_optimization command.
# This option requires a license for Design Compiler Graphical.
#
# The constant propagation is enabled when boundary optimization is disabled. In 
# order to stop constant propagation you can do the following
#
# set_compile_directives -constant_propagation false <object_list>
#
# Note: Layer optimization is on by default in Design Compiler Graphical, to 
#       improve the the accuracy of certain net delay during optimization.
#       To disable the the automatic layer optimization you can use the 
#       -no_auto_layer_optimization option.
#
#################################################################################
## RM+ Variable and Command Settings before first compile_ultra
#################################################################################
if { $OPTIMIZATION_FLOW == "hplp"} {
    if {[shell_is_in_topographical_mode]} {

	# The following variable, when set to true, runs additional optimizations to improve the timing of  
	# the design at the cost of additional run time.
	set_app_var compile_timing_high_effort true

	# The following variable enables a mode of coarse placement in which cells are not distributed  
	# evenly  across the surface but are allowed to clump together for better QoR     
	set_app_var placer_max_cell_density_threshold 0.75        

  #Set the maximum utilization to 0.9 in congestion options 
   set_congestion_options -max_util 0.90


	# The following variable, when set to true, enables very high effort optimization to fix total negative slack 
	# Setting following variable to true may affect run time
	set_app_var psynopt_tns_high_effort true

	# Use the following variable to enable the physically aware clock gating 
	set_app_var power_cg_physically_aware_cg true
	
	#The following variable helps to reduce the total negative slack of the design
	set_app_var placer_tns_driven true

	# Enable low power placement.  
	# Low power placement affects the placement of cells, pulls them closer together, 
	# on nets with high switching activity to reduce the overall dynamic power of your design.  
        set_app_var compile_enable_total_power_optimization true

        # In MCMM flow use set_scenario_options -dynamic_power true 
	#set_dynamic_optimization true

    }
        # The following variable enables register replication across the hierarchy by creating new ports
	# on the instances of the subdesigns if it is necessary to improve the timing of the design
	set_app_var compile_register_replication_across_hierarchy true 
}
if { $OPTIMIZATION_FLOW == "hc"} {
   if {[shell_is_in_topographical_mode]} {

       # This command enables congestion aware Global buffering based on Zroutebased estimation,
       # reducing congestion along narrow channels across macros. Enabling this feature may have 
       # runtime and QOR impact. Enable this variable on macro intensive designs with narrow channels.
       # set_ahfs_options -global_route true


       # With the following variables set, Zroute-based congestion-driven placement is enabled
       # instead of virtual route based estimation. 
       # Enabling this feature may have runtime impact. Enable this for highly congested designs
       # set_app_var placer_congestion_effort medium
       # set_app_var placer_enable_enhanced_router true

       # Enabling the variable can lead to lower congestion for designs that have congestion due to
       # multiplexing logic in the RTL. This variable is supported only in the initial compile step,
       # Not supported in incremental compile.
       set_app_var compile_prefer_mux true
   }
}
if { $OPTIMIZATION_FLOW == "rtm_exp"} {
  if {[shell_is_in_topographical_mode]} {
  
      set_host_options -max_cores 8
      # The following command overrides runtime-intensive user settings with settings designed
      # to improve runtime. Since the run time intensive optimizations are turned off it might 
      # impact QoR. You can use this as an exploration flow when run time is a concern.
      compile_prefer_runtime
  }
}
if {[shell_is_in_topographical_mode]} {

	# The following variable, when set to true, runs additional optimizations to improve the timing of  
	# the design at the cost of additional run time.
	#set_app_var compile_timing_high_effort true

if {[shell_is_dcnxt_shell]} {
  #################################################################################
  # Applying Required Settings for High Performance Cores
  #################################################################################
  # Use the set_technology and set_hpc_options command either before compile_ultra 
  # or before compile_ultra -incremental commands to set the core and stage 
  # specific settings for high performance cores. 
  # Refer to the "Applying Required Settings for High Performance Cores "
  # section in the Design Compiler User Guide for details.
  # Note: This is a Design Compiler NXT feature and is not supported in 
  # other flavors of the tool.
  # set_technology -node <n>              
  # set_hpc_options -core <core> -stage compile
  # Any individual settings applied after the set_hpc_options will 
  # override the recommended settings.
 }
}
if {[shell_is_in_topographical_mode]} {
  # Use the "-check_only" option of "compile_ultra" to verify that your
  # libraries and design are complete and that optimization will not fail
  # in topographical mode.  Use the same options as will be used in compile_ultra.

  # compile_ultra -scan -gate_clock -spg -check_only
}
compile_ultra -scan -gate_clock -spg
Warning: Congestion optimization is enabled as part of the physical guidance flow. (OPT-1445)
Information: Performing power optimization on scenario: mode_norm.fast.RCmin. (PWR-850)
Alib files are up-to-date.

TLU+ File = /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmax.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------

TLU+ File = /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmin.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
Information: Core area not specified, which can cause correlation issues with IC Compiler. (DCT-041)
Warning: '9' ports are missing location, compile_ultra will automatically assign a location for these ports. For more details run compile_ultra -check_only -spg. (SPG-013)
Warning: Tool will use native floorplan capabilities to place the ports. (DCT-398)

TLU+ File = /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmax.tluplus
TLU+ File = /mnt/coe/workspace/ece/ece720-common/tech/google/star_rcxt/sky130/sky130_RCmin.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
Information: Running optimization using a maximum of 4 cores. (OPT-1500)
Information: Choosing a test methodology will restrict the optimization of sequential cells. (UIO-12)
Information: Evaluating DesignWare library utilization. (UISN-27)

============================================================================
| DesignWare Building Block Library  |         Version         | Available |
============================================================================
| Basic DW Building Blocks           | S-2021.06-DWBB_202106.3 |     *     |
| Licensed DW Building Blocks        | S-2021.06-DWBB_202106.3 |     *     |
============================================================================

============================================================================
| Flow Information                                                         |
----------------------------------------------------------------------------
| Flow         | Design Compiler Graphical                                 |
============================================================================
| Design Information                                      | Value          |
============================================================================
| Number of Scenarios                                     | 2              |
| Leaf Cell Count                                         | 24             |
| Number of User Hierarchies                              | 0              |
| Sequential Cell Count                                   | 4              |
| Macro Count                                             | 0              |
| Number of Power Domains                                 | 0              |
| Design with UPF Data                                    | false          |
----------------------------------------------------------------------------
| Variables                                               | Value          |
----------------------------------------------------------------------------
============================================================================
Information: Sequential output inversion is enabled.  SVF file must be used for formal verification. (OPT-1208)

Information: There are 1 potential problems in your design. Please run 'check_design' for more information. (LINT-99)

  Simplifying Design 'counter'
Information: Performing clock-gating with positive edge logic: 'integrated' and negative edge logic: 'or'. (PWR-1047)

****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)
Loaded alib file './alib-52/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db.alib'
Loaded alib file './alib-52/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db.alib'
  Building model 'DW01_NAND2'
Information: Ungrouping 0 of 2 hierarchies before Pass 1 (OPT-775)
Information: State dependent leakage is now switched from on to off.

  Beginning Pass 1 Mapping
  ------------------------
  Processing 'counter'
Information: Added key list 'DesignWare' to design 'counter'. (DDB-72)
  Processing 'SNPS_CLOCK_GATE_HIGH_counter'
  Mapping integrated clock gating circuitry

  Updating timing information
Information: Using 4 cores for timing computations. (TIM-270)
Information: Updating design information... (UID-85)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)
Information: Propagating switching activity (low effort zero delay simulation). (PWR-6)
Information: failed to get design core area
Information: failed to get design core area


==================================
Dominant Scenario Design Coverage:
==================================

                 TOTAL VIOL     NOT RELAXED     UNIQUE-IGNORED    RELAXED 
==========================================================================
       max_delay          3       3 (100.0%)            0            0


Information: failed to get design core area
Information: failed to get design core area

********************************************
Report    : Scenario Reduction Summary
Design    : counter
Scenarios :
	    mode_norm.slow.RCmax (dominant)
	    mode_norm.fast.RCmin (Leakage-Only)
********************************************

Information: Skipping clock gating on design SNPS_CLOCK_GATE_HIGH_counter, since there are no registers. (PWR-806)
Information: Performing clock-gating on design counter. (PWR-730)
Information: Automatic shift-register identification is enabled for scan. Not all registers will be scan-replaced. (OPT-467)

  Beginning Mapping Optimizations  (Ultra High effort)
  -------------------------------
Information: There is no timing violation in design counter. Delay-based auto_ungroup will not be performed. (OPT-780)

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:12     290.9      0.00       0.0       0.0                           22852.6465
    0:00:12     290.9      0.00       0.0       0.0                           22852.6465

  Beginning Global Optimizations
  ------------------------------
  Numerical Synthesis (Phase 1)
  Numerical Synthesis (Phase 2)

  Beginning Delay Optimization
  ----------------------------
    0:00:14     294.1      0.00       0.0       0.0                           22984.8027
    0:00:14     294.1      0.00       0.0       0.0                           22984.8027
    0:00:14     294.1      0.00       0.0       0.0                           22984.8027
    0:00:15     294.1      0.00       0.0       0.0                           22984.8027
    0:00:15     294.1      0.00       0.0       0.0                           22984.8027
    0:00:15     294.1      0.00       0.0       0.0                           22984.8027
Information: failed to get design core area
  Loading design 'counter'
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

Information: The design utilization is 0.56
Information: Based  on the design utilization, automatically setting placer_max_cell_density_threshold to '0.60'. (SPG-128)
Running precluster optimization.
...20%...40%...60%...80%...100% done.


 Collecting Buffer Trees ... Found 0

 Processing Buffer Trees ... 

    [0] 100% Done ...


Information: Automatic high-fanout synthesis deletes 0 cells. (HFS-802)
Information: Automatic high-fanout synthesis adds 0 new cells. (PSYN-864)



  Beginning Timing Optimizations
  ------------------------------
Information: Propagating switching activity (low effort zero delay simulation). (PWR-6)

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:17     294.1      0.00       0.0       0.0                           22984.8027
Previously defined placer_max_cell_density_threshold value 0.60 is being used
...33%...67%...100% done.


  Beginning Timing Optimizations
  ------------------------------
Information: Propagating switching activity (low effort zero delay simulation). (PWR-6)

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:17     298.9      0.00       0.0       0.0                           22984.8027
    0:00:17     298.9      0.00       0.0       0.0                           22984.8027
    0:00:18     298.9      0.00       0.0       0.0                           22984.8027
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

********************************************
Report    : Scenario Reduction Summary
Design    : counter
Scenarios :
	    mode_norm.slow.RCmax (dominant)
	    mode_norm.fast.RCmin (dominant) (Leakage-Only)
********************************************

****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

  Beginning High Effort Delay Optimization
  -----------------------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:21     298.9      0.00       0.0       0.0                           22984.8027

Info-lpmode: computing default table with library = lib10
    0:00:21     298.9      0.00       0.0       0.0                           22984.8027
    0:00:21     298.9      0.00       0.0       0.0                           22984.8027
    0:00:21     298.9      0.00       0.0       0.0                           22984.8027
    0:00:22     298.9      0.00       0.0       0.0                           22984.8027
    0:00:22     298.9      0.00       0.0       0.0                           22984.8027
    0:00:22     298.9      0.00       0.0       0.0                           22984.8027
    0:00:22     295.7      0.00       0.0       0.0                           22852.6465

  Set up Remaining Resource Array 


Note: Symbol # after min delay cost means estimated hold TNS across all active scenarios 


  Optimization Complete
  ---------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:22     295.7      0.00       0.0       0.0                           22852.6465
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db'
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db'
Information: State dependent leakage is now switched from off to on.
1
#################################################################################
# Save Design after First Compile
#################################################################################
write -format ddc -hierarchy -output ${RESULTS_DIR}/${DCRM_COMPILE_ULTRA_DDC_OUTPUT_FILE}
Writing ddc file 'results/counter.compile_ultra.ddc'.
1
if {$OPTIMIZATION_FLOW != "rtm_exp"} {
#################################################################################
# Performing placement aware multibit banking
#################################################################################

#################################################################################
if {[shell_is_in_topographical_mode]} {
       # You can use placement aware multibit banking to group single-bit register cells that are
       # physically near each other into a multibit registers. 
       # This has to be done before DFT insertion in Design Compiler
       # These commands require a Design Compiler Graphical license
       # Please use -wns_threshold option with identify_register_banks command if u want to 
       # exclude specific percentage of timing critical registers from multibit banking
       # identify_register_banks -output ${RESULTS_DIR}/${DCRM_MULTIBIT_CREATE_REGISTER_BANK_FILE}
       # redirect ${REPORTS_DIR}/${DCRM_MULTIBIT_CREATE_REGISTER_BANK_REPORT} {source -echo -verbose ${RESULTS_DIR}/${DCRM_MULTIBIT_CREATE_REGISTER_BANK_FILE}}
}
#################################################################################


################################################################################
## RM+ Variable and Command Settings before incremental compile
################################################################################
if { $OPTIMIZATION_FLOW == "hplp" } {
    if {[shell_is_in_topographical_mode]} {
	# You can use placement aware multibit banking to group single-bit register cells that 
	# are physically near each other into a multibit registers
        # Please use -wns_threshold option with identify_register_banks command if u want to 
        # exclude specific percentage of timing critical registers from multibit banking
	identify_register_banks -output 	    ${RESULTS_DIR}/${DCRM_MULTIBIT_CREATE_REGISTER_BANK_FILE}
	source -echo -verbose ${RESULTS_DIR}/${DCRM_MULTIBIT_CREATE_REGISTER_BANK_FILE}
    }
}
#################################################################################
# DFT Compiler Optimization Section
#################################################################################

    #############################################################################
    # Verilog Libraries for Test Design Rule Checking
    #############################################################################

    # For complex cells that do not have functional models in .lib format,
    # you can supply a list of TetraMAX-compatible Verilog libraries 
    # for test design rule checking.
    # Set the following variable in the dc_setup.tcl file:
    
    # set_app_var test_simulation_library <list of Verilog library files>

    #############################################################################
    # DFT Signal Type Definitions
    #
    # These are design-specific settings that should be modified.
    # The following are only examples and should not be used.
    #############################################################################

    # Define all global DFT signals in this section. If you define any Top-down DFT partitions, 
    # specify DFT signals in the DFT partitions section.
    # It is recommended that top-level test ports be defined as a part of the
    # RTL design and included in the netlist for floorplanning.

    # If you create test ports here and they are not in your floorplan, you should use
    # create_terminal for these additional test ports for topographical mode synthesis.

    if {[shell_is_in_topographical_mode]} {
      # create_terminal -layer "layer_name" -bounding_box {x1 y1 x2 y2} -port ScanPortName ... (repeat for each new test port)
    }

    # If you are using the internal pins flow, it is recommended to run the
    # change_names command before set_dft_signal to avoid problems after DFT insertion.
    # In this case, set_dft_signal pins should be based on pin names after change_names.
    #   -  Use the "-view existing_dft" for already connected DFT signals which must be 
    #      understood for the design to pass "dft_drc".
    #   -  Use the "-view spec" for DFT signals that DFT Compiler will use during
    #      "insert_dft" when making new scan connections.

    # change_names -rules verilog -hierarchy

    # set_dft_signal -view spec -type ScanDataOut -port SO
    # set_dft_signal -view spec -type ScanDataIn -port SI
    # set_dft_signal -view spec -type ScanEnable -port SCAN_ENABLE
    # set_dft_signal -view existing_dft -type ScanClock -port [list CLK] -timing {45 55}
    # set_dft_signal -view existing_dft -type Reset -port RESET -active 0

    #puts "RM-Info: Sourcing script file [which ${DCRM_DFT_SIGNAL_SETUP_INPUT_FILE}]\n"
    source -echo -verbose ${DCRM_DFT_SIGNAL_SETUP_INPUT_FILE}

    #############################################################################
    # DFT for Clock Gating
    #
    # This section includes variables and commands used only when clock gating
    # has been performed in the design.
    #############################################################################

    # Use the following command to initialize clock gating cells for test that are
    # made transparent with a signal held constant for testing, e.g. of type 'Constant'.
    # The value set depends on the hierarchy depth of the clock-gating cells.
    # This setting is not needed where clock-gating cells are controlled with scan enable.

    # set_dft_drc_configuration -clock_gating_init_cycles 1

    # To specify a dedicated ScanEnable/TestMode signal to be used for clock gating,
    # use the "-usage clock_gating" option of the "set_dft_signal" command

    # set_dft_signal -view spec -type <ScanEnable|TestMode> -port <dedicated port> -usage clock_gating

    # You can specify the clock-gating connectivity of the ScanEnable/TestMode signals
    # after they are predefined with set_dft_signal -usage clock_gating

    # set_dft_connect <LABEL> -type clock_gating_control -source <DFT signal> [-target ...]

    #############################################################################
    # DFT Configuration
    #############################################################################

    # Preserve the design name when writing to the database during DFT insertion. 
    set_dft_insertion_configuration -preserve_design_name true

    # Do not perform synthesis optimization during DFT insertion. 
    set_dft_insertion_configuration -synthesis_optimization none

    # Multibit cell handling
    # Specify -preserve_multibit_segment to false to treat the cells inside a
    # multibit component as discrete sequential cells. This improves balancing
    # of scan chains.
    # Starting I-2013.12 release, the default setting is false
    # set_scan_configuration -preserve_multibit_segment false

    ## DFT Clock Mixing Specification
    # For a hierarchical flow, don't mix clocks at the block level:
    # set_scan_configuration -clock_mixing no_mix

    # For a top-down methodology clock mixing is recommended, if possible:
    set_scan_configuration -clock_mixing mix_clocks

    #############################################################################
    # DFT AutoFix Configuration
    #############################################################################

    # Please refer to the TestMAX DFT User Guide, Chapter 12,
    # "Advanced DFT Architecture Methodologies", "Using AutoFix" section.

    # Please refer to the dc.dft_autofix_config.tcl file included with the
    # Design Compiler Reference Methodology scripts for an example of a
    # design-specific AutoFix configuration.

    # Create a design-specific Autofix configuration file and uncomment the
    # following line to source this file.

    # source -echo -verbose ${DCRM_DFT_AUTOFIX_CONFIG_INPUT_FILE}

    #############################################################################
    # DFTMAX Compression Configuration 
    #############################################################################

    # Starting with Reference Methodology Scripts version G-2012.06
    # DFTMAX Compression is enabled in the default flow configuration.

    # Comment out the following command or change the option to "-scan_compression disable"
    # to disable DFTMAX Compression during DFT insertion.

    #set_dft_configuration -scan_compression enable

    # DFTMAX Compression Options:
    # 
    #  -min_power true
    #     This specifies that compressor inputs are to be gated for functional power
    #     saving. 
    #     It also reduces glitching during functional and capture operations
    #     Default for -min_power option is false. Recommend that you set this to
    #     true. 
    #
    #  -xtolerance: value is set to tool default. 
    #     Specify "high" to generate DFTMAX compression architecture that has 100% X-tolerance.
    #
    #  -minimum_compression: tool default is a target compression ratio of 10,
    #
    #  -location <compressor_decompressor_location>
    #      Specifies the instance name in which the compressor and decompressor 
    #      will be instantiated.
    #      The default location is the top level of the current design.
    # 
    # For details on these and other DFTMAX compression options, please refer to the
    # TestMAX DFT User Guide, Chapter 18, "Using DFTMAX Compression"
    # and Chapter 20, "Managing X Values in Scan Compression".
     
    #set_scan_compression_configuration -xtolerance high -min_power true;

    # Use the following to define the test-mode signal to be used for DFTMAX  
    # compression. Ensure that that test mode signals to be used for clockgating have 
    # been configured with set_dft_signal -usage clock_gating.

    # set_dft_signal -view spec -type TestMode -port scan_compression_enable


    #############################################################################
    # Shift Power Groups Configuration
    #############################################################################

    # Starting L-2016.03-SP2 release, DFTMAX Compression supports insertion of Shift Power Groups
    # to reduce power consumption during scan shift.
    # Please refer to the TestMAX DFT User Guide, Chapter 18,
    # "Reducing Power Consumption in Compressed Scan Designs", 
    # "Reducing Scan Shift Power Using Shift Power Groups" section.
    # 
    # To insert Shift Power Groups, do the following:
    # 
    # If you do not insert On-Chip Clocking (OCC), specify:
   
    # set_scan_compression_configuration
    # -shift_power_groups true
    # -shift_power_chain_length <l> | -shift_power_chain_ratio <r>
    # -shift_power_clock <clk>
    # 
    # Specify only one of -shift_power_chain_length or -shift_power_chain_ratio but not both.
    # 
    # Specify the signal to disable the shift power groups
      
    # set_dft_signal -view spec -type TestControl -port <p>
    # set_scan_compression_configuration -shift_power_disable <p>
      
    # Specify the scan-in and scan-out signals to use for the Shift Power Control chain
    # Note the name of the chain specified in the set_scan_path command. This name needs to be specified
    # in TetraMAX set_drc command (refer to TMAX-RM for details) 
    # 
    # set_scan_path shift_power_control_chain -class spc     # -scan_data_in SPC_IN     # -scan_data_out SPC_OUT \ 
    # -test_mode all
    # 
    # 
    # If you insert On-Chip Clocking (OCC), then specify:
    # 
    # set_scan_compression_configuration
    # -shift_power_groups true
    # -shift_power_chain_length <l> | -shift_power_chain_ratio <r>
    # 
    # Specify only one of -shift_power_chain_length or -shift_power_chain_ratio but not both.
    # Do not specify -shift_power_clock option. In OCC flows, the clock chain clock is automatically used.
     
    # Specify an external clock chain if you plan to use On-Chip Clocking together with Shift Power Control chain
    
    # set_scan_path OCC -class occ     # -scan_data_in  OCC_IN     # -scan_data_out  OCC_OUT     # -test_mode all



    #############################################################################
    # DFT Pipelined Scan Data Configuration
    #############################################################################

   # Use set_pipeline_scan_data_configuration to control how Pipelined Scan Data Registers
   # should be inserted

   # We recommend that you use the head_scan_flop true option to create head pipeline registers that 
   # hold their state during the capture cycle. 
   # You should also constrain ScanEnable to its inactive value during capture in ScanCompression modes


   # Note: if you select the head_scan_flop true option, you can share the scan clock with the head_pipeline_clock. 
   #  If you do not select head_scan_flop true option, then you must use a dedicated head pipeline clock.


    # Options:
    #  -head_scan_flop true
    #  -head_pipeline_clock  <name of clock for head pipeline registers>
    #  -tail_pipeline_clock  <name of clock for tail pipeline registers>
    #  -head_pipeline_stages <desired number of head pipeline stages>
    #  -tail_pipeline_stages <desired number of tail pipeline stages>

    # Example:

    # set_pipeline_scan_data_configuration -head_pipeline_clock <clock_name>     #   -tail_pipeline_clock <clock_name>     #   -head_scan_flop true     #   -head_pipeline_stages <x>     #   -tail_pipeline_stages <y>
    #############################################################################
    # DFT Additional Setup
    #############################################################################

    # Add any additional design-specific DFT constraints here

    #############################################################################
    # Defining Multiple Test modes
    #############################################################################
    
    # Use the define_test_mode command to define additional test modes that you wish to build.
    #
    # If you have enabled DFTMAX or DFTMAX Ultra Compression, the tool will build two test modes by 
    # default: ScanCompression_mode and Internal_scan. 
    #
    # If you wish to override the default test modes, you need to define the purpose of that test mode, 
    # then use the -base_mode and -test_mode options of set_scan_compression_configuration or 
    # set_streaming_compression_configuration command to define the correspondence between the two modes.
    #  
    # Design Compiler shell switches to that test mode after a define_test_mode command.
    #
    # To define DFT signals or scan configuration for a particular test mode, specify -test_mode option 
    # for each modes that you have defined.
    #  
    # At top level, use define_test_mode -target to specify the block level test mode that should be active in 
    # that mode. Please refer to the TestMAX DFT User Guide Chapter 18, 
    # "Using DFTMAX Compression", "DFTMAX Scan Compression and Multiple Test Modes" section.
    #
    # Block level Example with DFTMAX Compression:
    # Defining the test modes at block level
    # define_test_mode MY_internal_scan -usage scan 
    # define_test_mode MY_compression -usage scan_compression
    # 
    # Specifying the DFT signals for each mode using the -test_mode option:
    # set_dft_signal -port scan_input_port_1  -type ScanDataIn  -view spec -test_mode MY_internal_scan
    # set_dft_signal -port scan_input_port_1  -type ScanDataIn  -view spec -test_mode MY_compression
    # set_dft_signal -port scan_output_port_1 -type ScanDataOut -view spec -test_mode MY_internal_scan
    # set_dft_signal -port scan_output_port_1 -type ScanDataOut -view spec -test_mode MY_compression
    #
    # Specifying the scan configuration for each test mode:
    # set_scan_configuration -chain_count <scan mode chain count> -test_mode MY_internal_scan
    # set_scan_configuration -chain_count <compression mode chain count> -test_mode MY_compression
    #
    # Specify the correspondence between user-defined internal scan mode and user-defined compression mode
    # set_scan_compression_configuration -chain_count <compression mode chain count>  -base_mode MY_internal_scan -test_mode MY_compression

    # Top level example with DFTMAX Compression:
    # define_test_mode MY_top_internal_scan -usage scan -target [list core1:MY_internal_scan core2:MY_internal_scan top]
    # define_test_mode MY_top_compression -usage scan_compression -target [list core1:MY_compression core2:MY_compression top]
    #
    ###########################################################################
    # Defining DFT partitions
    ###########################################################################
    # Use the define_dft_partition command to define a set of clock domains, design references,
    # hierarchical cells, or sequential leaf cells that you can specify scan and compression configuration.
    # Then use the current_dft_partition command to set the current partition, then apply one or more
    # supported test configuration commands to configure scan for that partition.
    # Define any partition specific DFT signals in this section.
    #
    # Be sure to define any global scan and compression configuration and signals before define_dft_partition command.
    #
    # Please refer to the TestMAX DFT User Guide, Chapter 18,
    # "Using DFTMAX Compression", "Top-Down Flat Compressed Scan Flow with Partitions" section.
    #
    # define_dft_partition <partition_1>           #   -include <list_of_cells_or_references>     #   -clocks  <list of_clocks>
    #
    # define_dft_partition <partition_2>           #   -include <list_of_cells_or_references>     #   -clocks  <list of_clocks>
    #
    # current_dft_partition <partition_1>
    # <Scan and Compression configuration for partition_1>
    # If you have defined multiple test modes, you must use -test_mode option when defining DFT signals.
    # <DFT signals specific to partition_1>
    #
    # current_dft_partition <partition_2>
    # <Scan and Compression configuration for partition_2>
    # If you have defined multiple test modes, you must use -test_mode option when defining DFT signals.
    # <DFT signals specific to partition_2>
    
    #############################################################################
    # DFT Test Protocol Creation
    #############################################################################

    create_test_protocol

    #############################################################################
    # DFT Insertion
    #############################################################################

    # Use the -verbose version of dft_drc to assist in debugging if necessary
    
    dft_drc                                
    dft_drc -verbose                           > ${REPORTS_DIR}/${DCRM_DFT_DRC_CONFIGURED_VERBOSE_REPORT}
    report_scan_configuration                  > ${REPORTS_DIR}/${DCRM_DFT_SCAN_CONFIGURATION_REPORT}
    report_scan_compression_configuration      > ${REPORTS_DIR}/${DCRM_DFT_COMPRESSION_CONFIGURATION_REPORT}
    report_dft_insertion_configuration         > ${REPORTS_DIR}/${DCRM_DFT_PREVIEW_CONFIGURATION_REPORT}

    # Use the -show all version to preview_dft for more detailed report
    preview_dft                                > ${REPORTS_DIR}/${DCRM_DFT_PREVIEW_DFT_SUMMARY_REPORT}
    preview_dft -show all -test_points all     > ${REPORTS_DIR}/${DCRM_DFT_PREVIEW_DFT_ALL_REPORT}

    insert_dft

    #################################################################################
    # Re-create Default Path Groups
    #
    # In case of ports being created during insert_dft they need to be added
    # to those path groups.
    # Separating these paths can help improve optimization.
    #################################################################################
    
    #set current_scenario_saved [current_scenario]
    #foreach scenario [all_active_scenarios] {
    #  current_scenario ${scenario}
    #  set ports_clock_root [filter_collection [get_attribute [get_clocks] sources] object_class==port]
    #  group_path -name REGOUT -to [all_outputs]
    #  group_path -name REGIN -from [remove_from_collection [all_inputs] ${ports_clock_root}]
    #  group_path -name FEEDTHROUGH -from [remove_from_collection [all_inputs] ${ports_clock_root}] -to [all_outputs]
    #}
    #current_scenario ${current_scenario_saved}


################################################################################
## RM+ Variable and Command Settings before incremental compile
################################################################################
if { $OPTIMIZATION_FLOW == "hplp" } {
  # Creating path groups to reduce TNS
 create_auto_path_groups -mode mapped
}
if { (${OPTIMIZATION_FLOW} == "hc") || (${OPTIMIZATION_FLOW} == "hplp") } {
    if {[shell_is_in_topographical_mode]} {

	# Enable congestion-driven  placement  in incremental compile to improve congestion    
	# while preserving quality of results
	set_app_var spg_congestion_placement_in_incremental_compile true
    }
}

if {[file exists [which ${LIBRARY_DONT_USE_PRE_INCR_COMPILE_LIST}]]} {
  puts "RM-Info: Sourcing script file [which ${LIBRARY_DONT_USE_PRE_INCR_COMPILE_LIST}]\n"
  source -echo -verbose $LIBRARY_DONT_USE_PRE_INCR_COMPILE_LIST
}

if {[shell_is_dcnxt_shell]} {
  # Use the set_technology and set_hpc_options command either before compile_ultra 
  # or before compile_ultra -incremental commands to set the core and stage 
  # specific settings for high performance cores. 
  # Refer to the "Applying Required Settings for High Performance Cores "
  # section in the Design Compiler User Guide for details.
  # Note: This is a Design Compiler NXT feature and is not supported in 
  # other flavors of the tool.
  # set_hpc_options -core <core> -stage compile_inc
  # Any individual settings applied after the set_hpc_options will 
  # override the recommended settings.
}

#########################################################################
# Incremental compile is required if netlist and/or constraints are 
# changed after first compile
# Example: DFT insertion, Placement aware multibit banking etc.       
# Incremental compile is also recommended for final QoR signoff as well
#########################################################################   

compile_ultra -incremental -scan -spg

################################################################################
# Remove the path groups generated by create_path_groups command. 
# This does not remove user created path groups
################################################################################
if { $OPTIMIZATION_FLOW == "hplp" } {
    remove_auto_path_groups
}
#################################################################################
# High-effort area optimization
#
# optimize_netlist -area command, was introduced in I-2013.12 release to improve
# area of gate-level netlists. The command performs monotonic gate-to-gate 
# optimization on mapped designs, thus improving area without degrading timing or
# leakage. 
#################################################################################

optimize_netlist -area
}
set_scan_configuration -style multiplexed_flip_flop
Accepted scan configuration for modes: all_dft
1
set_scan_configuration -chain_count 1
Accepted scan configuration for modes: all_dft
1
set_dft_signal -view existing_dft -type ScanClock -port [list {clock}] -timing {45 55}
Accepted dft signal specification for modes: all_dft
1
set_dft_signal -view existing_dft -type Reset -port [list {reset}] -active_state 1
Accepted dft signal specification for modes: all_dft
1
Accepted insert_dft configuration specification.
Accepted insert_dft configuration specification.
Accepted scan configuration for modes: all_dft
In mode: all_dft...

Information: Starting test protocol creation. (TEST-219)
  ...reading user specified clock signals...
Information: Identified system/test clock port clock (45.0,55.0). (TEST-265)
  ...reading user specified asynchronous signals...
Information: Identified active high asynchronous control port reset. (TEST-266)
In mode: all_dft...
  Pre-DFT DRC enabled

Information: Starting test design rule checking. (TEST-222)
  Loading test protocol
  ...basic checks...
  ...basic sequential cell checks...
  	...checking for scan equivalents...
  ...checking vector rules...
  ...checking pre-dft rules...

-----------------------------------------------------------------
Begin Pre-DFT violations...

 Warning: Clock reset cannot capture data with other clocks off. (D8-1)
 Warning: Clock reset connects to data input (D) of DFF value_reg[3]. (D10-1)
Information: There are 3 other cells with the same violation. (TEST-171)
Warning: Clock gating cell clk_gate_value_reg has unconnected test pin. (TEST-130)

Pre-DFT violations completed...
-----------------------------------------------------------------

-----------------------------------------------------------------
  DRC Report

  Total violations: 7

-----------------------------------------------------------------

6 PRE-DFT VIOLATIONS
     1 Clock not able to capture violation (D8)
     4 Clock feeding data input violations (D10)
     1 Test pin of clock gating cell is unconnected violation (TEST-130)


Warning: Violations occurred during test design rule checking. (TEST-124)

-----------------------------------------------------------------
  Sequential Cell Report

  1 out of 5 sequential cells have violations

-----------------------------------------------------------------

SEQUENTIAL CELLS WITH VIOLATIONS
      *   1 cell is a clock gating cell
SEQUENTIAL CELLS WITHOUT VIOLATIONS
      *   4 cells are valid scan cells

Information: Test design rule checking completed. (TEST-123)

********************************************
Report    : Scenario Reduction Summary
Design    : counter
Scenarios :
	    mode_norm.slow.RCmax (dominant)
	    mode_norm.fast.RCmin (Leakage-Only)
********************************************

****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

Running DFT insertion in topographical mode.
  Information: Using test design rule information from previous dft_drc run.
  Architecting Scan Chains
  Routing Scan Chains
  Routing Global Signals
  Mapping New Logic
Resetting current test mode

Running insert_mv_cells ...
Warning: The design was optimized using compile_ultra -spg.  (SPG-123)
Running insert_mv_cells done.
Warning: Congestion optimization is enabled as part of the physical guidance flow. (OPT-1445)
Information: Starting from 2013.12 release, constant propagation is enabled even when boundary optimization is disabled. (OPT-1318)
Information: Performing power optimization on scenario: mode_norm.fast.RCmin. (PWR-850)
Alib files are up-to-date.
Information: Core area not specified, which can cause correlation issues with IC Compiler. (DCT-041)
Warning: '9' ports are missing location, compile_ultra will automatically assign a location for these ports. For more details run compile_ultra -check_only -spg. (SPG-013)
Warning: Tool will use native floorplan capabilities to place the ports. (DCT-398)
Warning: '3' ports inserted by test are missing location, compile_ultra will automatically assign a location for these ports. For more details run compile_ultra -check_only -spg. (SPG-012)
Information: Running optimization using a maximum of 4 cores. (OPT-1500)
Information: Choosing a test methodology will restrict the optimization of sequential cells. (UIO-12)
============================================================================
| Flow Information                                                         |
----------------------------------------------------------------------------
| Flow         | Design Compiler Graphical                                 |
============================================================================
| Design Information                                      | Value          |
============================================================================
| Number of Scenarios                                     | 2              |
| Leaf Cell Count                                         | 23             |
| Number of User Hierarchies                              | 1              |
| Sequential Cell Count                                   | 5              |
| Macro Count                                             | 0              |
| Number of Power Domains                                 | 0              |
| Design with UPF Data                                    | false          |
----------------------------------------------------------------------------
| Variables                                               | Value          |
----------------------------------------------------------------------------
============================================================================
Information: Sequential output inversion is enabled.  SVF file must be used for formal verification. (OPT-1208)

Information: There are 1 potential problems in your design. Please run 'check_design' for more information. (LINT-99)


Information: State dependent leakage is now switched from on to off.
Information: Updating design information... (UID-85)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)
Information: Propagating switching activity (low effort zero delay simulation). (PWR-6)
  Loading design 'counter'
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

Info: skipped to derive cell locations.

Information: The design utilization is 0.55
Information: Based  on the design utilization, automatically setting placer_max_cell_density_threshold to '0.70'. (SPG-128)
Warning: Found 8 percent of cells (3) without DC Topographical data. Generating data for those cells... (OPT-1404)
50%...100% done.
Information: Performing scan chain reordering in the SPG flow. (SPG-126)
  number of valid scan chains :  1
  number of failed scan chains:  0

  Wire Length Before Ordering 81
  Multi-directional repartitioning is employed instead of single-directional (vertical/horizontal).
  Wire Length After Ordering 73
  Routing Scan Chains
Scan Chain Reordering Completed Successfully


 Collecting Buffer Trees ... Found 0

 Processing Buffer Trees ... 

    [0] 100% Done ...


Information: Automatic high-fanout synthesis deletes 0 cells. (HFS-802)
Information: Automatic high-fanout synthesis adds 0 new cells. (PSYN-864)



  Beginning Timing Optimizations
  ------------------------------
Information: Propagating switching activity (low effort zero delay simulation). (PWR-6)

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:09     290.9      0.00       0.0       0.0                           22852.6465
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.00059 0.00059 (RCEX-011)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

********************************************
Report    : Scenario Reduction Summary
Design    : counter
Scenarios :
	    mode_norm.slow.RCmax (dominant)
	    mode_norm.fast.RCmin (Leakage-Only)
********************************************

    0:00:12     290.9      0.00       0.0       0.0                           22852.6465
    0:00:12     290.9      0.00       0.0       0.0                           22852.6465
Previously defined placer_max_cell_density_threshold value 0.70 is being used
33%...67%...100% done.
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

********************************************
Report    : Scenario Reduction Summary
Design    : counter
Scenarios :
	    mode_norm.slow.RCmax (dominant)
	    mode_norm.fast.RCmin (dominant) (Leakage-Only)
********************************************

****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.057 0.057 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00024 0.00024 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00019 0.00019 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00071 0.00071 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.4e-05 1.4e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00028 0.00028 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Vertical Res : 0.019 0.019 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)

  Beginning High Effort Delay Optimization
  -----------------------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:15     290.9      0.00       0.0       0.0                           22852.6465

Info-lpmode: computing default table with library = lib340
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465


  Beginning High Effort Optimization Phase
  ----------------------------------------


  Beginning Timing Optimization
  -----------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465

  Beginning Delay Optimization
  ----------------------------
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465
    0:00:16     290.9      0.00       0.0       0.0                           22852.6465


  High Effort Optimization Phase Complete
  ---------------------------------------


  Beginning Buftree Cleanup
  -------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:17     290.9      0.00       0.0       0.0                           22852.6465
    0:00:17     290.9      0.00       0.0       0.0                           22852.6465
Info-lpmode: refreshing table
Info-lpmode: computing default table with library = lib340
Info-lpmode: computing lp table with library=lib340
    0:00:18     290.9      0.00       0.0       0.0                           22852.6465
    0:00:18     290.9      0.00       0.0       0.0                           22852.6465

  Set up Remaining Resource Array 


Note: Symbol # after min delay cost means estimated hold TNS across all active scenarios 


  Optimization Complete
  ---------------------
    0:00:18     290.9      0.00       0.0       0.0                           22852.6465
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db'
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db'
Information: State dependent leakage is now switched from off to on.
Information: Performing power optimization on scenario: mode_norm.fast.RCmin. (PWR-850)
Alib files are up-to-date.
Information: Core area not specified, which can cause correlation issues with IC Compiler. (DCT-041)
Warning: '9' ports are missing location, compile_ultra will automatically assign a location for these ports. For more details run compile_ultra -check_only -spg. (SPG-013)
Warning: Tool will use native floorplan capabilities to place the ports. (DCT-398)
Warning: '3' ports inserted by test are missing location, compile_ultra will automatically assign a location for these ports. For more details run compile_ultra -check_only -spg. (SPG-012)
Information: Running optimization using a maximum of 4 cores. (OPT-1500)

  Loading design 'counter'
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The library cell 'sky130_fd_sc_hs__conb_1' in the library 'sky130_fd_sc_hs' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)
****************************************************************
Information: TLUPlus based RC computation is enabled. (RCEX-141)
****************************************************************
Information: The distance unit in Capacitance and Resistance is 1 micron. (RCEX-007)
Information: The RC model used is TLU+. (RCEX-015)
Information: Library Derived Cap for layer li1 : 0.00013 0.00013 (RCEX-011)
Information: Library Derived Res for layer li1 : 0.072 0.072 (RCEX-011)
Information: Library Derived Cap for layer met1 : 0.00022 0.00022 (RCEX-011)
Information: Library Derived Res for layer met1 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met2 : 0.00018 0.00018 (RCEX-011)
Information: Library Derived Res for layer met2 : 0.00089 0.00089 (RCEX-011)
Information: Library Derived Cap for layer met3 : 0.00027 0.00027 (RCEX-011)
Information: Library Derived Res for layer met3 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met4 : 0.00021 0.00021 (RCEX-011)
Information: Library Derived Res for layer met4 : 0.00016 0.00016 (RCEX-011)
Information: Library Derived Cap for layer met5 : 0.00026 0.00026 (RCEX-011)
Information: Library Derived Res for layer met5 : 1.8e-05 1.8e-05 (RCEX-011)
Information: Library Derived Horizontal Cap : 0.00025 0.00025 (RCEX-011)
Information: Library Derived Horizontal Res : 0.00036 0.00036 (RCEX-011)
Information: Library Derived Vertical Cap : 0.00017 0.00017 (RCEX-011)
Information: Library Derived Vertical Res : 0.024 0.024 (RCEX-011)
Information: Using derived R and C coefficients. (RCEX-008)
Information: Using region-based R and C coefficients. (RCEX-013)
Information: Library Derived Via Res : 0.0024 0.0024 (RCEX-011)



                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:08     290.9      0.00       0.0       0.0                           22852.6465
Info-lpmode: computing default table with library = lib497


  Beginning Area Optimization
  -----------------------------


Note: Symbol # after min delay cost means estimated hold TNS across all active scenarios 


  Optimization Complete
  ---------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:09     290.9      0.00       0.0       0.0                           22852.6465
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ff_n40C_1v95_ccsnoise.db'
Loading db file '/mnt/coe/workspace/ece/ece720-common/tech/google/skywater-pdk/libraries/sky130_fd_sc_hs/v0.0.2/timing/sky130_fd_sc_hs__ss_n40C_1v60_ccsnoise.db'
1
#################################################################################
# Write Out Final Design and Reports
#
#        .ddc:   Recommended binary format used for subsequent Design Compiler sessions
#    Milkyway:   Recommended binary format for IC Compiler
#        .v  :   Verilog netlist for ASCII flow (Formality, PrimeTime, VCS)
#       .spef:   Topographical mode parasitics for PrimeTime
#        .sdf:   SDF backannotated topographical mode timing for PrimeTime
#        .sdc:   SDC constraints for ASCII flow
#
#################################################################################
change_names -rules verilog -hierarchy
1
write_icc2_files -force  -output ${RESULTS_DIR}/${DCRM_FINAL_DESIGN_ICC2}
Information: During the execution of write_icc2_files warning messages were issued, please check results/ICC2_files/write_icc2_files.log files. (DCT-228)
1
#############################################################################
# DFT Write out Test Protocols and Reports
#############################################################################
# write_scan_def adds SCANDEF information to the design database in memory, so 
# this command must be performed prior to writing out the design database 
# containing binary SCANDEF.
write_scan_def -output ${RESULTS_DIR}/${DCRM_DFT_FINAL_SCANDEF_OUTPUT_FILE}
1
check_scan_def > ${REPORTS_DIR}/${DCRM_DFT_FINAL_CHECK_SCAN_DEF_REPORT}
write_test_model -format ctl -output ${RESULTS_DIR}/${DCRM_DFT_FINAL_CTL_OUTPUT_FILE}
Writing test model file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.ctl'...
1
report_dft_signal > ${REPORTS_DIR}/${DCRM_DFT_FINAL_DFT_SIGNALS_REPORT}
# DFT outputs for standard scan mode
write_test_protocol -test_mode Internal_scan -output ${RESULTS_DIR}/${DCRM_DFT_FINAL_PROTOCOL_OUTPUT_FILE}
Writing test protocol file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.scan.spf' for mode 'Internal_scan'...
1
current_test_mode Internal_scan
Current test mode is set to 'Internal_scan'.
1
report_scan_path > ${REPORTS_DIR}/${DCRM_DFT_FINAL_SCAN_PATH_REPORT}
dft_drc
In mode: Internal_scan...
  Design has scan chains in this mode
  Design is scan routed
  Post-DFT DRC enabled

Information: Starting test design rule checking. (TEST-222)
  Loading test protocol
  ...basic checks...
  ...basic sequential cell checks...
  ...checking vector rules...
  ...checking clock rules...
  ...checking scan chain rules...
  ...checking scan compression rules...
  ...checking X-state rules...
  ...checking tristate rules...
  ...extracting scan details...

-----------------------------------------------------------------
Begin Clock violations...

 Warning: Clock reset cannot capture data with other clocks off. (C4-1)
 Warning: Clock reset used as data is different than capture clock clock for inputs CLK/D of stable DFF (value_reg_3_). (C26-1)
Information: There are 3 other cells with the same violation. (TEST-171)

Clock violations completed...
-----------------------------------------------------------------

-----------------------------------------------------------------
  DRC Report

  Total violations: 5

-----------------------------------------------------------------

5 CLOCK VIOLATIONS
     1 Clock unable to capture violation (C4)
     4 Clock as data different from capture clock for stable cell violations (C26)


Warning: Violations occurred during test design rule checking. (TEST-124)

-----------------------------------------------------------------
  Sequential Cell Report

  1 out of 5 sequential cells have violations

-----------------------------------------------------------------

SEQUENTIAL CELLS WITH VIOLATIONS
      *   1 cell is a clock gating cell
SEQUENTIAL CELLS WITHOUT VIOLATIONS
      *   4 cells are valid scan cells

Information: Test design rule checking completed. (TEST-123)
1
dft_drc -verbose > ${REPORTS_DIR}/${DCRM_DFT_DRC_FINAL_REPORT}
# DFT outputs for compressed scan mode
# If you have defined you own test modes, change the name of the test mode from 
# "ScanCompression_mode" to the one that you have specified using define_test_mode command.
#write_test_protocol -test_mode ScanCompression_mode -output ${RESULTS_DIR}/${DCRM_DFT_FINAL_SCAN_COMPR_PROTOCOL_OUTPUT_FILE}
#current_test_mode ScanCompression_mode
#report_scan_path > ${REPORTS_DIR}/${DCRM_DFT_FINAL_SCAN_COMPR_SCAN_PATH_REPORT}
#dft_drc 
#dft_drc -verbose > ${REPORTS_DIR}/${DCRM_DFT_DRC_FINAL_SCAN_COMPR_REPORT}
#################################################################################
# Write out Design
#################################################################################
write -format verilog -hierarchy -output ${RESULTS_DIR}/${DCRM_FINAL_VERILOG_OUTPUT_FILE}
Writing verilog file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.v'.
1
write -format ddc     -hierarchy -output ${RESULTS_DIR}/${DCRM_FINAL_DDC_OUTPUT_FILE}
Writing ddc file 'results/counter.mapped.ddc'.
1
# Write and close SVF file and make it available for immediate use
set_svf -off
1
#################################################################################
# Write out Design Data
#################################################################################
if {[shell_is_in_topographical_mode]} {

  # Note: A secondary floorplan file ${DCRM_DCT_FINAL_FLOORPLAN_OUTPUT_FILE}.objects
  #       might also be written to capture physical-only objects in the design.
  #       This file should be read in before reading the main floorplan file.

  write_floorplan -all ${RESULTS_DIR}/${DCRM_DCT_FINAL_FLOORPLAN_OUTPUT_FILE}

  # If the DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE variable has been set in dc_setup_filenames.tcl
  # file then the standard cell physical guidance is being created to support SPG ASCII hand-off
  # to IC Compiler by the write_def command.
  # Invoking write_def commands requires a Design Compiler Graphical license or an IC Compiler
  # Design Planning license.

  if {[info exists DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE]} {
    write_def -components -output ${RESULTS_DIR}/${DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE}
  }

  # Do not write out net RC info into SDC
  set_app_var write_sdc_output_lumped_net_capacitance false
  set_app_var write_sdc_output_net_resistance false

  set all_active_scenario_saved [all_active_scenarios]
  set current_scenario_saved [current_scenario]
  set_active_scenarios -all
  foreach scenario [all_active_scenarios] {
      current_scenario ${scenario}

    # Write parasitics data from Design Compiler Topographical placement for static timing analysis
    write_parasitics -output ${RESULTS_DIR}/[dcrm_mcmm_filename ${DCRM_DCT_FINAL_SPEF_OUTPUT_FILE} ${scenario}]

    # Write SDF backannotation data from Design Compiler Topographical placement for static timing analysis
    write_sdf ${RESULTS_DIR}/[dcrm_mcmm_filename ${DCRM_DCT_FINAL_SDF_OUTPUT_FILE} ${scenario}]

    write_sdc -nosplit ${RESULTS_DIR}/[dcrm_mcmm_filename ${DCRM_FINAL_SDC_OUTPUT_FILE} ${scenario}]
  }
  current_scenario ${current_scenario_saved}
  set_active_scenarios ${all_active_scenario_saved}
}
Current scenario is: mode_norm.slow.RCmax
Info: all scenarios are active.
Current scenario is: mode_norm.slow.RCmax
Information: Writing parasitics to file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.mode_norm.slow.RCmax.spef'. (WP-3)
Information: Annotated 'cell' delays are assumed to include load delay. (UID-282)
Information: Writing timing information to file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.mode_norm.slow.RCmax.sdf'. (WT-3)
Information: Updating design information... (UID-85)
Current scenario is: mode_norm.fast.RCmin
Information: Writing parasitics to file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.mode_norm.fast.RCmin.spef'. (WP-3)
Information: Annotated 'cell' delays are assumed to include load delay. (UID-282)
Information: Writing timing information to file '/mnt/ncsudrive/r/rjujjav/rjujjav/hw01/pdrm/dcrm/results/counter.mapped.mode_norm.fast.RCmin.sdf'. (WT-3)
Current scenario is: mode_norm.slow.RCmax
1
# If SAIF is used, write out SAIF name mapping file for PrimeTime-PX
saif_map -type ptpx -write_map ${RESULTS_DIR}/${DESIGN_NAME}.mapped.SAIF.namemap
Information: Writing SAIF name mapping information into the PT-PX name mapping file 'results/counter.mapped.SAIF.namemap'. (PWR-636)
1
#################################################################################
# Generate Final Reports
#################################################################################
if { $OPTIMIZATION_FLOW  == "rtm_exp"} {
  set_host_options -max_cores 8
  update_timing

  parallel_execute [list   "report_qor > ${REPORTS_DIR}/${DCRM_FINAL_QOR_REPORT}"   "report_timing -transition_time -nets -attributes -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_TIMING_REPORT}"   "report_area -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_AREA_REPORT}"   "report_clock_gating -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_CLOCK_GATING_REPORT}"   ]

} else {
report_qor > ${REPORTS_DIR}/${DCRM_FINAL_QOR_REPORT}

report_timing -scenarios [all_active_scenarios] -transition_time -nets -attributes -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_TIMING_REPORT}

if {[shell_is_in_topographical_mode]} {
  report_area -physical -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_AREA_REPORT}
} else {
  report_area -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_AREA_REPORT}
}
report_area -designware  > ${REPORTS_DIR}/${DCRM_FINAL_DESIGNWARE_AREA_REPORT}
report_resources -hierarchy > ${REPORTS_DIR}/${DCRM_FINAL_RESOURCES_REPORT}
report_clock_gating -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_CLOCK_GATING_REPORT}
}
# Create a QoR snapshot of timing, physical, constraints, clock, power data, and routing on 
# active scenarios and stores it in the location  specified  by  the icc_snapshot_storage_location 
# variable. 
if {[shell_is_in_topographical_mode]} {
  set icc_snapshot_storage_location ${REPORTS_DIR}/${DCRM_DCT_FINAL_QOR_SNAPSHOT_FOLDER}
  create_qor_snapshot -name ${DCRM_DCT_FINAL_QOR_SNAPSHOT_REPORT} > ${REPORTS_DIR}/${DCRM_DCT_FINAL_QOR_SNAPSHOT_REPORT}
}
# Uncomment the next line to report all the multibit registers and the banking ratio in the design
# redirect ${REPORTS_DIR}/${DCRM_MULTIBIT_BANKING_REPORT} {report_multibit_banking -nosplit }
if { $OPTIMIZATION_FLOW == "hplp"} {
 redirect ${REPORTS_DIR}/${DCRM_MULTIBIT_BANKING_REPORT} {report_multibit_banking -nosplit }
}
# Use SAIF file for power analysis
# set current_scenario_saved [current_scenario]
# foreach scenario [all_active_scenarios] {
#   current_scenario ${scenario}
#   read_saif -auto_map_names -input ${DESIGN_NAME}.${scenario}.saif -instance < DESIGN_INSTANCE > -verbose
# }
# current_scenario ${current_scenario_saved}
report_power -scenarios [all_active_scenarios] -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_POWER_REPORT}
report_clock_gating -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_CLOCK_GATING_REPORT}
# Uncomment the next line if you include the -self_gating to the compile_ultra command
# to report the XOR Self Gating information.
# report_self_gating  -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_SELF_GATING_REPORT}
# Uncomment the next line to reports the number, area, and  percentage  of cells 
# for each threshold voltage group in the design.
# report_threshold_voltage_group -nosplit > ${REPORTS_DIR}/${DCRM_THRESHOLD_VOLTAGE_GROUP_REPORT}
if {[shell_is_in_topographical_mode]} {
  # report_congestion (topographical mode only) uses zroute for estimating and reporting 
  # routing related congestion which improves the congestion correlation with IC Compiler.
  # Design Compiler Topographical supports create_route_guide command to be consistent with IC
  # Compiler after topographical mode synthesis.
  # Those commands require a license for Design Compiler Graphical.

  report_congestion > ${REPORTS_DIR}/${DCRM_DCT_FINAL_CONGESTION_REPORT}

  # Use the following to generate and write out a congestion map from batch mode
  # This requires a GUI session to be temporarily opened and closed so a valid DISPLAY
  # must be set in your UNIX environment.

  if {[info exists env(DISPLAY)]} {
    gui_start

    # Create a layout window
    set MyLayout [gui_create_window -type LayoutWindow]

    # Build congestion map in case report_congestion was not previously run
    report_congestion -build_map

    # Display congestion map in layout window
    gui_show_map -map "Global Route Congestion" -show true

    # Zoom full to display complete floorplan
    gui_zoom -window [gui_get_current_window -view] -full

    # Write the congestion map out to an image file
    # You can specify the output image type with -format png | xpm | jpg | bmp

    # The following saves only the congestion map without the legends
    gui_write_window_image -format png -file ${REPORTS_DIR}/${DCRM_DCT_FINAL_CONGESTION_MAP_OUTPUT_FILE}

    # The following saves the entire congestion map layout window with the legends
    gui_write_window_image -window ${MyLayout} -format png -file ${REPORTS_DIR}/${DCRM_DCT_FINAL_CONGESTION_MAP_WINDOW_OUTPUT_FILE}

    gui_stop
  } else {
    puts "Information: The DISPLAY environment variable is not set. Congestion map generation has been skipped."
  }
}
Current design is 'counter'.
Current design is 'counter'.
Information: Reporting congestion information from cached data. (DCT-246)
To restart the GUI, type 'gui_start'.
#################################################################################
# Write out Milkyway Design for Top-Down Flow
#
# This should be the last step in the script
#################################################################################
if {[shell_is_in_topographical_mode]} {
  # write_milkyway uses mw_design_library variable from dc_setup.tcl
  write_milkyway -overwrite -output ${DCRM_FINAL_MW_CEL_NAME}
}
1
exit

Memory usage for this session 953 Mbytes.
Memory usage for this session including child processes 953 Mbytes.
CPU usage for this session 79 seconds ( 0.02 hours ).
Elapsed time for this session 137 seconds ( 0.04 hours ).

Thank you...
